{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/polarbear/source/favicon.ico","path":"favicon.ico","modified":1,"renderable":1},{"_id":"themes/polarbear/source/css/style.scss","path":"css/style.scss","modified":1,"renderable":1},{"_id":"themes/polarbear/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/js/src/theme.js","path":"js/src/theme.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/lib/fancybox/blank.gif","path":"lib/fancybox/blank.gif","modified":1,"renderable":1},{"_id":"themes/polarbear/source/lib/fancybox/fancybox_loading.gif","path":"lib/fancybox/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/polarbear/source/lib/fancybox/fancybox_loading@2x.gif","path":"lib/fancybox/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/polarbear/source/lib/fancybox/fancybox_sprite.png","path":"lib/fancybox/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/polarbear/source/lib/fancybox/fancybox_overlay.png","path":"lib/fancybox/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/polarbear/source/lib/fancybox/fancybox_sprite@2x.png","path":"lib/fancybox/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/polarbear/source/lib/fancybox/jquery.fancybox.css","path":"lib/fancybox/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/polarbear/source/lib/fancybox/jquery.fancybox.js","path":"lib/fancybox/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/lib/fancybox/jquery.fancybox.pack.js","path":"lib/fancybox/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/lib/jquery/jquery-3.1.1.min.js","path":"lib/jquery/jquery-3.1.1.min.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/plugins/prettify/lang-apollo.js","path":"plugins/prettify/lang-apollo.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/plugins/prettify/lang-basic.js","path":"plugins/prettify/lang-basic.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/plugins/prettify/lang-clj.js","path":"plugins/prettify/lang-clj.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/plugins/prettify/lang-css.js","path":"plugins/prettify/lang-css.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/plugins/prettify/lang-dart.js","path":"plugins/prettify/lang-dart.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/plugins/prettify/lang-erlang.js","path":"plugins/prettify/lang-erlang.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/plugins/prettify/lang-ex.js","path":"plugins/prettify/lang-ex.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/plugins/prettify/lang-go.js","path":"plugins/prettify/lang-go.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/plugins/prettify/lang-hs.js","path":"plugins/prettify/lang-hs.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/plugins/prettify/lang-kotlin.js","path":"plugins/prettify/lang-kotlin.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/plugins/prettify/lang-lasso.js","path":"plugins/prettify/lang-lasso.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/plugins/prettify/lang-lisp.js","path":"plugins/prettify/lang-lisp.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/plugins/prettify/lang-llvm.js","path":"plugins/prettify/lang-llvm.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/plugins/prettify/lang-logtalk.js","path":"plugins/prettify/lang-logtalk.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/plugins/prettify/lang-lua.js","path":"plugins/prettify/lang-lua.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/plugins/prettify/lang-matlab.js","path":"plugins/prettify/lang-matlab.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/plugins/prettify/lang-ml.js","path":"plugins/prettify/lang-ml.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/plugins/prettify/lang-mumps.js","path":"plugins/prettify/lang-mumps.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/plugins/prettify/lang-n.js","path":"plugins/prettify/lang-n.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/plugins/prettify/lang-pascal.js","path":"plugins/prettify/lang-pascal.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/plugins/prettify/lang-proto.js","path":"plugins/prettify/lang-proto.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/plugins/prettify/lang-r.js","path":"plugins/prettify/lang-r.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/plugins/prettify/lang-rd.js","path":"plugins/prettify/lang-rd.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/plugins/prettify/lang-rust.js","path":"plugins/prettify/lang-rust.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/plugins/prettify/lang-scala.js","path":"plugins/prettify/lang-scala.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/plugins/prettify/lang-sql.js","path":"plugins/prettify/lang-sql.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/plugins/prettify/lang-swift.js","path":"plugins/prettify/lang-swift.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/plugins/prettify/lang-tcl.js","path":"plugins/prettify/lang-tcl.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/plugins/prettify/lang-tex.js","path":"plugins/prettify/lang-tex.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/plugins/prettify/lang-vb.js","path":"plugins/prettify/lang-vb.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/plugins/prettify/lang-vhdl.js","path":"plugins/prettify/lang-vhdl.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/plugins/prettify/lang-wiki.js","path":"plugins/prettify/lang-wiki.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/plugins/prettify/lang-xq.js","path":"plugins/prettify/lang-xq.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/plugins/prettify/lang-yaml.js","path":"plugins/prettify/lang-yaml.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/plugins/prettify/node_prettify.js","path":"plugins/prettify/node_prettify.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/plugins/prettify/prettify.css","path":"plugins/prettify/prettify.css","modified":1,"renderable":1},{"_id":"themes/polarbear/source/plugins/prettify/prettify.js","path":"plugins/prettify/prettify.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/plugins/prettify/run_prettify.js","path":"plugins/prettify/run_prettify.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/lib/fancybox/helpers/fancybox_buttons.png","path":"lib/fancybox/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/polarbear/source/lib/fancybox/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/polarbear/source/lib/fancybox/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/lib/fancybox/helpers/jquery.fancybox-media.js","path":"lib/fancybox/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/lib/fancybox/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/polarbear/source/lib/fancybox/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/_drafts/00001-Hexo笔记.md","hash":"9c2ea0385e63c320b8a301c65b2b4272bdc8a9a6","modified":1630293867312},{"_id":"source/_drafts/00002-读书笔记.md","hash":"b12bb13db4c49a3d745d3ac5dada30926d4da60d","modified":1630293886063},{"_id":"source/_drafts/00003-计算机知识体系概述.md","hash":"44eca7ba0ecc2ab3be138a661af21e66d242ee9d","modified":1630847021559},{"_id":"source/_drafts/00004-设计模式之创建型模式.md","hash":"ed36917bccca00ea91bb6e11f7d504ce519c44c8","modified":1630315917331},{"_id":"source/about/index.md","hash":"8ff6b849e1eb735d49afaae46583887aadd04c10","modified":1630849502928},{"_id":"source/_posts/00005-mysql主从配置实践.md","hash":"adf04ac2fce33833cd813cc46f4ebdd2f47f8e82","modified":1631246356365},{"_id":"source/_posts/00006-attrdict浅析.md","hash":"5021becb26f5c04d7ee6b2c686f957749d08bc94","modified":1631246240608},{"_id":"source/_posts/00007-源码阅读方法.md","hash":"f9a0a672f0f7b906259bf2b785f28ed8f5a60a13","modified":1631244615806},{"_id":"source/categories/index.md","hash":"0db4f0e03810cc5aa1c92efdde32ba58b7c2d658","modified":1630290560662},{"_id":"source/tags/index.md","hash":"28b1cd5b739971a8cff603b55cd3ac98ce5c30fe","modified":1630290973435},{"_id":"source/_drafts/00001-Hexo笔记/01.jpg","hash":"e21c4cd079294096141ac1ca2e944812be47de66","modified":1630027838401},{"_id":"source/_drafts/00001-Hexo笔记/02.jpg","hash":"8e82fcc6ddf0e93fe489c0e98a5e40952bf47f42","modified":1630027861283},{"_id":"source/_drafts/00001-Hexo笔记/03.jfif","hash":"cb62f764295ebe40d5644b5cbea6c8162923043d","modified":1630027902418},{"_id":"source/_drafts/00001-Hexo笔记/04.jpg","hash":"eaf4f4a6bd95ca13b3a7c3d6ca7d5bb9674f32ad","modified":1630028227770},{"_id":"source/_posts/00005-mysql主从配置实践/01.png","hash":"3f88ee5646a25b9d23a527080bc69999073b650e","modified":1630828393842},{"_id":"source/_posts/00005-mysql主从配置实践/02.png","hash":"3c0947c21f14dcba30125a1567143c43e18fff32","modified":1630828970235},{"_id":"source/_posts/00005-mysql主从配置实践/05.png","hash":"82cc2750bbc49bcad5d695a02d856e8885ae7380","modified":1630830678178},{"_id":"source/_posts/00005-mysql主从配置实践/06.png","hash":"cf15a8ce671926297ec2fa542d3d3fb0cc2894d9","modified":1630831093343},{"_id":"source/_posts/00005-mysql主从配置实践/07.png","hash":"bc25b9519e6a4b1eda312316040edba13ae040a3","modified":1630831847203},{"_id":"source/_posts/00005-mysql主从配置实践/08.png","hash":"ecc09aea7062818be15d26dce8519318f75638c7","modified":1630832378675},{"_id":"source/_posts/00005-mysql主从配置实践/09.png","hash":"46047e7cf2e6983f74cb994baee4cd711ba4f2a9","modified":1630832507397},{"_id":"source/_posts/00005-mysql主从配置实践/10.png","hash":"d7b40ca55bf701ed006cc92c5f7fbd91fe5295d3","modified":1630832588723},{"_id":"source/_posts/00006-attrdict浅析/01.jpg","hash":"89bdaac2393bf851919cecec1e1acc4549964c48","modified":1630859416639},{"_id":"source/_posts/00005-mysql主从配置实践/03.jpg","hash":"422180553f2e587a49f41fb8df4e6d5ea476b6a6","modified":1630830172444},{"_id":"source/_posts/00005-mysql主从配置实践/03.jfif","hash":"422180553f2e587a49f41fb8df4e6d5ea476b6a6","modified":1630830154200},{"_id":"source/_posts/00006-attrdict浅析/02.jpg","hash":"27c909165d35888e4f22c14fd9e366b35bf9f20c","modified":1631244790615},{"_id":"source/_posts/00007-源码阅读方法/01.jpg","hash":"ec68a5c9bd23757047c04db86d370a16077ddfa9","modified":1631244535458},{"_id":"themes/polarbear/LICENSE","hash":"6fd796a4c624297885ceed920ac7130a96f29a85","modified":1630036285346},{"_id":"themes/polarbear/README.md","hash":"08e3b46698675f19168e2e16ae572880b91ebd52","modified":1630036285346},{"_id":"themes/polarbear/_config.yml","hash":"9b902c5733b2856669a6f13d4733389c1694a489","modified":1631254840118},{"_id":"themes/polarbear/languages/default.yml","hash":"461ceb7fa8303e46edc5a2e87a974ac139f8da8e","modified":1630036285347},{"_id":"themes/polarbear/languages/en.yml","hash":"461ceb7fa8303e46edc5a2e87a974ac139f8da8e","modified":1630036285347},{"_id":"themes/polarbear/languages/zh-cn.yml","hash":"0d2db625db357fb804332999a36c5cdc015191bf","modified":1630036285347},{"_id":"themes/polarbear/layout/_layout.swig","hash":"663bf90d9a32641b4c207d5da687ac9f179e3638","modified":1630059918526},{"_id":"themes/polarbear/layout/categories.swig","hash":"76a4041e57cd6e2bb3928dc8b27d0ccb27874ef7","modified":1630036285353},{"_id":"themes/polarbear/layout/archive.swig","hash":"80cbc362b8954f27526f5eb6908cb40ba4715e23","modified":1630036285353},{"_id":"themes/polarbear/layout/index.swig","hash":"f7cef80ec4921d98f59da7a9988576dd0a98e785","modified":1630036285354},{"_id":"themes/polarbear/layout/page.swig","hash":"697d6276832339b6946226b0a112e350ecf91039","modified":1630036285354},{"_id":"themes/polarbear/layout/post.swig","hash":"d4d1b9305853d339eb7011ecd2305034aa612d89","modified":1630036285354},{"_id":"themes/polarbear/source/favicon.ico","hash":"7d7c441f635c35b73f060f698773b14b7f306f4c","modified":1630036285363},{"_id":"themes/polarbear/layout/_macro/archive.swig","hash":"ef4f56b41058b44dee345759caa2edfac8ba7e67","modified":1630036285348},{"_id":"themes/polarbear/layout/_macro/post.swig","hash":"5c0459458398e3e806684eed009ea9a27975399c","modified":1617727431000},{"_id":"themes/polarbear/layout/_partial/comments.swig","hash":"847207b2c327c96ee223e78761ac9dc2c40e37b7","modified":1630036285349},{"_id":"themes/polarbear/layout/_partial/footer.swig","hash":"00639b11d09f86a78c869a2d741a3ebcf3b437e9","modified":1630036285350},{"_id":"themes/polarbear/layout/_partial/head.swig","hash":"c7f78c92aa43d1d40c991b8c3a52f1f23ce3dc94","modified":1630036285350},{"_id":"themes/polarbear/layout/_partial/header.swig","hash":"19aae8191ff19089e0e4214c9633d495d78fe41d","modified":1630036285350},{"_id":"themes/polarbear/layout/_partial/pagination.swig","hash":"b7eb9812cfb8819b9fa4e16b37ba8ff478a1e1c8","modified":1630036285350},{"_id":"themes/polarbear/layout/_partial/toc.swig","hash":"e35c27ef9ab1a2c17b9b12ffd063016dae691233","modified":1617727431000},{"_id":"themes/polarbear/layout/_partial/widget.swig","hash":"428e2b913a7337cf323797baae497f5c302c91e3","modified":1630036285351},{"_id":"themes/polarbear/layout/_script/analytics.swig","hash":"228e8bb77e8888cf1ffee80079d88db06da92a76","modified":1630036285352},{"_id":"themes/polarbear/layout/_script/comments.swig","hash":"24d79d5c8d3241a184c8cce5d8aff85e2e81300a","modified":1630036285352},{"_id":"themes/polarbear/layout/_script/config.swig","hash":"b4600ec5cccfd1f1707072167d9a87b4881cc31d","modified":1630036285352},{"_id":"themes/polarbear/layout/_script/libs.swig","hash":"49784648cd4d926dd77b4d83ab3f6317c0a1b62e","modified":1630036285352},{"_id":"themes/polarbear/layout/_script/theme.swig","hash":"193e9981f8418fbb6d18603a37585386c2dadeaa","modified":1630036285353},{"_id":"themes/polarbear/source/css/_base.scss","hash":"8e69bd582437dc7306c8b284f53c762ee37235fc","modified":1617727431000},{"_id":"themes/polarbear/source/css/_variables.scss","hash":"67380077f89ac910f58e2c3a0e9afa18c0969893","modified":1617727431000},{"_id":"themes/polarbear/source/css/style.scss","hash":"148cd66b7d6906a48105085d88138ff056e235d5","modified":1617727431000},{"_id":"themes/polarbear/source/css/_layout.scss","hash":"adfe6b08a183326e2115974860d1862288d4789c","modified":1617727431000},{"_id":"themes/polarbear/layout/_partial/_head/meta.swig","hash":"3bd621d2b8b9bb2c3c0b942e27dbfb7c20af284d","modified":1630060904334},{"_id":"themes/polarbear/layout/_partial/_widget/categories.swig","hash":"ea392e16c63313ad1a0a617c7c1168f34248a18a","modified":1630036285349},{"_id":"themes/polarbear/layout/_partial/_widget/custom.swig","hash":"eff3a3f0bedbf214dfda3e4d877ffb22a4f5a585","modified":1630036285349},{"_id":"themes/polarbear/layout/_partial/_widget/tags.swig","hash":"fbb49b7e46cc69e114e3e06e1b2a9466e124fdf7","modified":1630036285349},{"_id":"themes/polarbear/layout/_script/_analytics/baidu-analytics.swig","hash":"4938aa843a78fecc2b3f85300a5c63ae22127b33","modified":1630036285351},{"_id":"themes/polarbear/layout/_script/_analytics/google-analytics.swig","hash":"a8d23ca9e56175aea950dbcae439ff82033e93c8","modified":1630036285351},{"_id":"themes/polarbear/layout/_script/_comments/disqus.swig","hash":"16808dbf97fd4d4520af53930c86c2b05b2dd619","modified":1630036285352},{"_id":"themes/polarbear/layout/_script/_comments/duoshou.swig","hash":"238d7d0d34aa0e9191dc51fed6ae50e4c39f6f02","modified":1630036285352},{"_id":"themes/polarbear/source/css/_common/_animation.scss","hash":"725af3ea621de186d6d61749836d5b491a96c1e4","modified":1617727431000},{"_id":"themes/polarbear/source/css/_common/_normalize.scss","hash":"d00dadbb22ebb9eea1193ab0d912ebbac73253cd","modified":1617727431000},{"_id":"themes/polarbear/source/css/_common/_utils.scss","hash":"265aa982b71a61b7edcd31802c10b002d0d9fc85","modified":1617727431000},{"_id":"themes/polarbear/source/css/_custom/_comment.scss","hash":"0b8e21ab1d145e16366dbe6b7f70f9fd530e8203","modified":1617727431000},{"_id":"themes/polarbear/source/css/_custom/_code.scss","hash":"9e158d7973e3cff85f365c6fc156563b7325b2e5","modified":1617727431000},{"_id":"themes/polarbear/source/css/_custom/_custom.scss","hash":"b44c5120256a0bfb45c4184037b16d36ebc02006","modified":1617727431000},{"_id":"themes/polarbear/source/css/_partial/_archive.scss","hash":"d4fa3756a4cab145f76fccc3c69d81b3412cec36","modified":1617727431000},{"_id":"themes/polarbear/source/css/_custom/_post.scss","hash":"f03e779ef705a919ebf2b83803d5ceb9b98e748c","modified":1631245824209},{"_id":"themes/polarbear/source/css/_partial/_back-to-top.scss","hash":"c6f586ac04a9a0f3633dadf5c66be9e0c4027f1d","modified":1617727431000},{"_id":"themes/polarbear/source/css/_partial/_footer.scss","hash":"5d708caa8a96f84642404fe8a0d7a755092710db","modified":1617727431000},{"_id":"themes/polarbear/source/css/_partial/_categories.scss","hash":"eb9fa27704fa280c6e8cc7b7f44b283cd2fe4ad3","modified":1617727431000},{"_id":"themes/polarbear/source/css/_partial/_gitment.scss","hash":"345aafc228f25b4ffd45fb0c51887f77793465de","modified":1617727431000},{"_id":"themes/polarbear/source/css/_partial/_header.scss","hash":"57eb34100dd344998314bb4d6d2cc2155aca7700","modified":1617727431000},{"_id":"themes/polarbear/source/css/_partial/_iconfont.scss","hash":"ae9d1019bdbe6de4fe97aabbd42f489039e978a0","modified":1617727431000},{"_id":"themes/polarbear/source/css/_partial/_pagination.scss","hash":"7362208b41453429adae449acc916f8633077248","modified":1617727431000},{"_id":"themes/polarbear/source/css/_partial/_post.scss","hash":"71bfa582c26c491c8791dadbc3cb135284a123a2","modified":1617727431000},{"_id":"themes/polarbear/source/css/_partial/_tags.scss","hash":"1928c8483f51035edccd6899d7f4ee06673f2804","modified":1617727431000},{"_id":"themes/polarbear/source/css/_partial/_widget.scss","hash":"e594beceb8525f9ec031eb3ad4e6eca8fe454e2a","modified":1617727431000},{"_id":"themes/polarbear/source/js/src/bootstrap.js","hash":"edb8690492039f4a4c9b83a3b9abda6d8a214984","modified":1617727431000},{"_id":"themes/polarbear/source/js/src/theme.js","hash":"68a3b98b08c9744a8f68724cb5e8f19d2f3a17e4","modified":1631254719734},{"_id":"themes/polarbear/source/lib/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1630036285364},{"_id":"themes/polarbear/source/lib/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1630036285364},{"_id":"themes/polarbear/source/lib/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1630036285365},{"_id":"themes/polarbear/source/lib/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1630036285364},{"_id":"themes/polarbear/source/lib/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1630036285365},{"_id":"themes/polarbear/source/lib/fancybox/jquery.fancybox.css","hash":"efd65dbeb6f8c3787f08b9c0ff92fd952507bc40","modified":1630036285367},{"_id":"themes/polarbear/source/lib/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1630036285365},{"_id":"themes/polarbear/source/lib/fancybox/jquery.fancybox.js","hash":"63ec8384f08206ded0f26a6e0630af0d9bbbd28e","modified":1630036285368},{"_id":"themes/polarbear/source/lib/fancybox/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1630036285368},{"_id":"themes/polarbear/source/plugins/prettify/lang-apollo.js","hash":"e19c633557b10eab4daad0c2586b3ecb44937ba3","modified":1617727431000},{"_id":"themes/polarbear/source/plugins/prettify/lang-basic.js","hash":"565276ee5ea2f117e07a8997d792b7d734e4063c","modified":1617727431000},{"_id":"themes/polarbear/source/plugins/prettify/lang-clj.js","hash":"fff2857ba9919e7a2e8b61b08f1b87be41ed3a46","modified":1617727431000},{"_id":"themes/polarbear/source/plugins/prettify/lang-css.js","hash":"9df3f79343a2104339e5c3ab9d94a39c0291b37b","modified":1617727431000},{"_id":"themes/polarbear/source/plugins/prettify/lang-dart.js","hash":"34c6c4897cf7d22e230ff9db55f2821c5eddbca8","modified":1617727431000},{"_id":"themes/polarbear/source/plugins/prettify/lang-erlang.js","hash":"6cb9234429b62d55ff078346668725d6c08efea9","modified":1617727431000},{"_id":"themes/polarbear/source/plugins/prettify/lang-ex.js","hash":"4a73c2a674799327a2dbe2691aff72d909034b7a","modified":1617727431000},{"_id":"themes/polarbear/source/plugins/prettify/lang-go.js","hash":"9cfcf1a3e4f9884b369910d7ed2cd67f644ac284","modified":1617727431000},{"_id":"themes/polarbear/source/plugins/prettify/lang-hs.js","hash":"602e2ff0c97f814773d3895f08c07b5efa8a63d5","modified":1617727431000},{"_id":"themes/polarbear/source/plugins/prettify/lang-kotlin.js","hash":"4aa66901437d588ccaf669d40a91a5cf36f2ffaa","modified":1617727431000},{"_id":"themes/polarbear/source/plugins/prettify/lang-lasso.js","hash":"ba0b1a3ac1ad041a1adf6b90154713d1248391e1","modified":1617727431000},{"_id":"themes/polarbear/source/plugins/prettify/lang-lisp.js","hash":"48d79c12e1915e1166c3cb8cb1798f8ec2443cc9","modified":1617727431000},{"_id":"themes/polarbear/source/plugins/prettify/lang-llvm.js","hash":"5138b9a56f063688205157703c629fefdb8ed4d0","modified":1617727431000},{"_id":"themes/polarbear/source/plugins/prettify/lang-logtalk.js","hash":"7836eccb85957e1dae2ca02a9530cf0c7369f949","modified":1617727431000},{"_id":"themes/polarbear/source/plugins/prettify/lang-lua.js","hash":"d907fa9f1e43aa6f86530d9803b6150b0852140b","modified":1617727431000},{"_id":"themes/polarbear/source/plugins/prettify/lang-ml.js","hash":"968bdc15137ae94b206e485b5bdfa5c96eff5857","modified":1617727431000},{"_id":"themes/polarbear/source/plugins/prettify/lang-mumps.js","hash":"9a1cae257b9b028b22ac2c4c9e4c3d2873898566","modified":1617727431000},{"_id":"themes/polarbear/source/plugins/prettify/lang-matlab.js","hash":"b71302c9a2aa5ed2b31a75ff364ec6270ac52b1b","modified":1617727431000},{"_id":"themes/polarbear/source/plugins/prettify/lang-n.js","hash":"c2c992ba29d96410a93109ec2505b8e7a96782b9","modified":1617727431000},{"_id":"themes/polarbear/source/plugins/prettify/lang-pascal.js","hash":"17d60d30e6a73b3a8657baba733bb04ecbd53039","modified":1617727431000},{"_id":"themes/polarbear/source/plugins/prettify/lang-proto.js","hash":"8dc02debbff302b7d75df5728888abea01d885ae","modified":1617727431000},{"_id":"themes/polarbear/source/plugins/prettify/lang-r.js","hash":"0c6b75d79b64f603b5e66e4824e51b01df7dc841","modified":1617727431000},{"_id":"themes/polarbear/source/plugins/prettify/lang-rd.js","hash":"5421a7fe15ddf2b5ea4ab37805e7b7df9784cb34","modified":1617727431000},{"_id":"themes/polarbear/source/plugins/prettify/lang-rust.js","hash":"d5320b7d04fa87634729120062047b4843d62e04","modified":1617727431000},{"_id":"themes/polarbear/source/plugins/prettify/lang-scala.js","hash":"74e6aef0b3c6ee2208d0ee3a4887766271724763","modified":1617727431000},{"_id":"themes/polarbear/source/plugins/prettify/lang-sql.js","hash":"75c9fcd8145b0312c103841ba4fa80bcb76c01e7","modified":1617727431000},{"_id":"themes/polarbear/source/plugins/prettify/lang-swift.js","hash":"0b12cb29773ac59b3e86a709982c06d1fb903e21","modified":1617727431000},{"_id":"themes/polarbear/source/plugins/prettify/lang-tcl.js","hash":"2270ce056e525578c4fdff32947fa44baeb3475a","modified":1617727431000},{"_id":"themes/polarbear/source/plugins/prettify/lang-tex.js","hash":"c30f64b85d576afbb7586a85bcfb471c4dace462","modified":1617727431000},{"_id":"themes/polarbear/source/plugins/prettify/lang-vb.js","hash":"ba5046fe3caa09c7e2b7e1b3a643b710285a1efa","modified":1617727431000},{"_id":"themes/polarbear/source/plugins/prettify/lang-vhdl.js","hash":"d19fd1f281d3f7b9583bbf446790d8c7f0022d9c","modified":1617727431000},{"_id":"themes/polarbear/source/plugins/prettify/lang-wiki.js","hash":"197ed2adc974afa9eba86f6eec4dbb864a8649c7","modified":1617727431000},{"_id":"themes/polarbear/source/plugins/prettify/lang-xq.js","hash":"dd0c434083a0fd01b144eb506caedf481abc4052","modified":1617727431000},{"_id":"themes/polarbear/source/plugins/prettify/lang-yaml.js","hash":"a3a509eb7a2298b962d8b132bd19d093c5e75b25","modified":1617727431000},{"_id":"themes/polarbear/source/plugins/prettify/node_prettify.js","hash":"a3b9a2e9b334ffd6fd1b59534b260a270c96c5c1","modified":1617727431000},{"_id":"themes/polarbear/source/plugins/prettify/prettify.css","hash":"5bd1232ffc2c60527396aaaa66b35e3826ffce00","modified":1617727431000},{"_id":"themes/polarbear/source/plugins/prettify/prettify.js","hash":"eec92d79f0678b390289981b01866ea5dd36c090","modified":1617727431000},{"_id":"themes/polarbear/source/css/_partial/_post/_code.scss","hash":"9daef08fdca5bb68a42eeac41e0f73833e7f7d07","modified":1617727431000},{"_id":"themes/polarbear/source/css/_partial/_post/_content.scss","hash":"a050e1cf5d71dec4cf0ba7f9e5b02c909cc7f086","modified":1617727431000},{"_id":"themes/polarbear/source/css/_partial/_post/_footer.scss","hash":"d4c0fc62e69412304691d58984fec0aa963e1117","modified":1617727431000},{"_id":"themes/polarbear/source/css/_partial/_post/_header.scss","hash":"ceca6f4b00154542c57bc6fe451e01892a9338d2","modified":1617727431000},{"_id":"themes/polarbear/source/lib/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1630036285366},{"_id":"themes/polarbear/source/lib/fancybox/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1630036285366},{"_id":"themes/polarbear/source/lib/fancybox/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1630036285366},{"_id":"themes/polarbear/source/lib/fancybox/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1630036285366},{"_id":"themes/polarbear/source/lib/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1630036285366},{"_id":"themes/polarbear/source/lib/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1630036285367},{"_id":"themes/polarbear/source/lib/jquery/jquery-3.1.1.min.js","hash":"042dd055cd289215835a58507c9531f808e1648a","modified":1630036285369},{"_id":"themes/polarbear/source/plugins/prettify/run_prettify.js","hash":"b029f610e84bf11d705927d92b0df4f376973a67","modified":1617727431000},{"_id":"public/about/index.html","hash":"d424b9db732e3eac2f844915b91dccec1a26c629","modified":1631255012669},{"_id":"public/tags/index.html","hash":"81c2a7be620572e287fe2dd4dbeb9a8c666eb506","modified":1631255012669},{"_id":"public/categories/index.html","hash":"4a0dddf5ba55b6bee98905736646ed68bd9f8d72","modified":1631255012669},{"_id":"public/2021/09/10/00007-源码阅读方法/index.html","hash":"0ec1cb60ea3d70b83ec9c01ebf97acfb7049fb36","modified":1631255012669},{"_id":"public/tags/Python/index.html","hash":"c4d60664a8158b11c6fa782e0290f5c69df70503","modified":1631255012669},{"_id":"public/tags/docker/index.html","hash":"7115acd2d94ce8986cd2cbb5c1b49ad07348d07e","modified":1631255012669},{"_id":"public/tags/mysql/index.html","hash":"926a69e97230a9484e4b7fda3437785be5889307","modified":1631255012669},{"_id":"public/tags/attrdict/index.html","hash":"b77def413146057bae290aaa586f94b67e6de8d2","modified":1631255012669},{"_id":"public/tags/第三方库/index.html","hash":"9297a4429cd6d65004196081c3051884d83177af","modified":1631255012669},{"_id":"public/tags/源码阅读/index.html","hash":"10004cc31e2f450ab882d0057f96efc6b5029b35","modified":1631255012669},{"_id":"public/archives/index.html","hash":"0cc65e77e8fedc60d0fab34dd570d666eff164d5","modified":1631255012669},{"_id":"public/archives/2019/index.html","hash":"933804e958a81d6f52e26c1b39c7cae62800ac6c","modified":1631255012669},{"_id":"public/archives/2019/09/index.html","hash":"d126f28965792fc4edd29ca776000318f26acda2","modified":1631255012669},{"_id":"public/archives/2020/index.html","hash":"3e2d6874251c2c7d54aeeb6cf5b51d51fe4825ec","modified":1631255012669},{"_id":"public/archives/2020/03/index.html","hash":"91134d988319ed77e12a4851017fb6ad7c2cd1e0","modified":1631255012669},{"_id":"public/archives/2021/09/index.html","hash":"a8bed93c0c5744d6ac47ab986d0bca48191e5d8f","modified":1631255012669},{"_id":"public/archives/2021/index.html","hash":"f566c4b4ff8ccc7aa0b0cb1d7d9dbd794c59dc9d","modified":1631255012669},{"_id":"public/index.html","hash":"b8e85a573d8757a9a74137dc74f5b2944bc6b5bc","modified":1631255012669},{"_id":"public/2020/03/04/00006-attrdict浅析/index.html","hash":"01e11e06e63f9e44ef6c5202038f4b4b96507893","modified":1631255012669},{"_id":"public/2019/09/05/00005-mysql主从配置实践/index.html","hash":"6915bf23e7cd5adc4d3410b64e5fc44c3fcfa1f3","modified":1631255012669},{"_id":"public/favicon.ico","hash":"7d7c441f635c35b73f060f698773b14b7f306f4c","modified":1631255012669},{"_id":"public/lib/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1631255012669},{"_id":"public/lib/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1631255012669},{"_id":"public/lib/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1631255012669},{"_id":"public/lib/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1631255012669},{"_id":"public/lib/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1631255012669},{"_id":"public/lib/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1631255012669},{"_id":"public/lib/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1631255012669},{"_id":"public/2019/09/05/00005-mysql主从配置实践/01.png","hash":"3f88ee5646a25b9d23a527080bc69999073b650e","modified":1631255012669},{"_id":"public/2019/09/05/00005-mysql主从配置实践/02.png","hash":"3c0947c21f14dcba30125a1567143c43e18fff32","modified":1631255012669},{"_id":"public/2019/09/05/00005-mysql主从配置实践/05.png","hash":"82cc2750bbc49bcad5d695a02d856e8885ae7380","modified":1631255012669},{"_id":"public/2019/09/05/00005-mysql主从配置实践/07.png","hash":"bc25b9519e6a4b1eda312316040edba13ae040a3","modified":1631255012669},{"_id":"public/2019/09/05/00005-mysql主从配置实践/06.png","hash":"cf15a8ce671926297ec2fa542d3d3fb0cc2894d9","modified":1631255012669},{"_id":"public/2019/09/05/00005-mysql主从配置实践/08.png","hash":"ecc09aea7062818be15d26dce8519318f75638c7","modified":1631255012669},{"_id":"public/2019/09/05/00005-mysql主从配置实践/09.png","hash":"46047e7cf2e6983f74cb994baee4cd711ba4f2a9","modified":1631255012669},{"_id":"public/2019/09/05/00005-mysql主从配置实践/10.png","hash":"d7b40ca55bf701ed006cc92c5f7fbd91fe5295d3","modified":1631255012669},{"_id":"public/2020/03/04/00006-attrdict浅析/01.jpg","hash":"89bdaac2393bf851919cecec1e1acc4549964c48","modified":1631255012669},{"_id":"public/2019/09/05/00005-mysql主从配置实践/03.jfif","hash":"422180553f2e587a49f41fb8df4e6d5ea476b6a6","modified":1631255012669},{"_id":"public/2019/09/05/00005-mysql主从配置实践/03.jpg","hash":"422180553f2e587a49f41fb8df4e6d5ea476b6a6","modified":1631255012669},{"_id":"public/2020/03/04/00006-attrdict浅析/02.jpg","hash":"27c909165d35888e4f22c14fd9e366b35bf9f20c","modified":1631255012669},{"_id":"public/js/src/bootstrap.js","hash":"edb8690492039f4a4c9b83a3b9abda6d8a214984","modified":1631255012669},{"_id":"public/js/src/theme.js","hash":"68a3b98b08c9744a8f68724cb5e8f19d2f3a17e4","modified":1631255012669},{"_id":"public/lib/fancybox/jquery.fancybox.css","hash":"79df8b1839cbcb82a0fd9738289eb43c1bc77026","modified":1631255012669},{"_id":"public/plugins/prettify/lang-apollo.js","hash":"e19c633557b10eab4daad0c2586b3ecb44937ba3","modified":1631255012669},{"_id":"public/plugins/prettify/lang-clj.js","hash":"fff2857ba9919e7a2e8b61b08f1b87be41ed3a46","modified":1631255012669},{"_id":"public/plugins/prettify/lang-css.js","hash":"9df3f79343a2104339e5c3ab9d94a39c0291b37b","modified":1631255012669},{"_id":"public/plugins/prettify/lang-basic.js","hash":"565276ee5ea2f117e07a8997d792b7d734e4063c","modified":1631255012669},{"_id":"public/plugins/prettify/lang-dart.js","hash":"34c6c4897cf7d22e230ff9db55f2821c5eddbca8","modified":1631255012669},{"_id":"public/plugins/prettify/lang-erlang.js","hash":"6cb9234429b62d55ff078346668725d6c08efea9","modified":1631255012669},{"_id":"public/plugins/prettify/lang-ex.js","hash":"4a73c2a674799327a2dbe2691aff72d909034b7a","modified":1631255012669},{"_id":"public/plugins/prettify/lang-go.js","hash":"9cfcf1a3e4f9884b369910d7ed2cd67f644ac284","modified":1631255012669},{"_id":"public/plugins/prettify/lang-hs.js","hash":"602e2ff0c97f814773d3895f08c07b5efa8a63d5","modified":1631255012669},{"_id":"public/plugins/prettify/lang-kotlin.js","hash":"4aa66901437d588ccaf669d40a91a5cf36f2ffaa","modified":1631255012669},{"_id":"public/plugins/prettify/lang-lasso.js","hash":"ba0b1a3ac1ad041a1adf6b90154713d1248391e1","modified":1631255012669},{"_id":"public/plugins/prettify/lang-lisp.js","hash":"48d79c12e1915e1166c3cb8cb1798f8ec2443cc9","modified":1631255012669},{"_id":"public/plugins/prettify/lang-llvm.js","hash":"5138b9a56f063688205157703c629fefdb8ed4d0","modified":1631255012669},{"_id":"public/plugins/prettify/lang-logtalk.js","hash":"7836eccb85957e1dae2ca02a9530cf0c7369f949","modified":1631255012669},{"_id":"public/plugins/prettify/lang-lua.js","hash":"d907fa9f1e43aa6f86530d9803b6150b0852140b","modified":1631255012669},{"_id":"public/plugins/prettify/lang-ml.js","hash":"968bdc15137ae94b206e485b5bdfa5c96eff5857","modified":1631255012669},{"_id":"public/plugins/prettify/lang-mumps.js","hash":"9a1cae257b9b028b22ac2c4c9e4c3d2873898566","modified":1631255012669},{"_id":"public/plugins/prettify/lang-n.js","hash":"c2c992ba29d96410a93109ec2505b8e7a96782b9","modified":1631255012669},{"_id":"public/plugins/prettify/lang-pascal.js","hash":"17d60d30e6a73b3a8657baba733bb04ecbd53039","modified":1631255012669},{"_id":"public/plugins/prettify/lang-proto.js","hash":"8dc02debbff302b7d75df5728888abea01d885ae","modified":1631255012669},{"_id":"public/plugins/prettify/lang-r.js","hash":"0c6b75d79b64f603b5e66e4824e51b01df7dc841","modified":1631255012669},{"_id":"public/plugins/prettify/lang-rd.js","hash":"5421a7fe15ddf2b5ea4ab37805e7b7df9784cb34","modified":1631255012669},{"_id":"public/plugins/prettify/lang-rust.js","hash":"d5320b7d04fa87634729120062047b4843d62e04","modified":1631255012669},{"_id":"public/plugins/prettify/lang-scala.js","hash":"74e6aef0b3c6ee2208d0ee3a4887766271724763","modified":1631255012669},{"_id":"public/plugins/prettify/lang-sql.js","hash":"75c9fcd8145b0312c103841ba4fa80bcb76c01e7","modified":1631255012669},{"_id":"public/plugins/prettify/lang-swift.js","hash":"0b12cb29773ac59b3e86a709982c06d1fb903e21","modified":1631255012669},{"_id":"public/plugins/prettify/lang-tcl.js","hash":"2270ce056e525578c4fdff32947fa44baeb3475a","modified":1631255012669},{"_id":"public/plugins/prettify/lang-vb.js","hash":"ba5046fe3caa09c7e2b7e1b3a643b710285a1efa","modified":1631255012669},{"_id":"public/plugins/prettify/lang-vhdl.js","hash":"d19fd1f281d3f7b9583bbf446790d8c7f0022d9c","modified":1631255012669},{"_id":"public/plugins/prettify/lang-tex.js","hash":"c30f64b85d576afbb7586a85bcfb471c4dace462","modified":1631255012669},{"_id":"public/plugins/prettify/lang-wiki.js","hash":"197ed2adc974afa9eba86f6eec4dbb864a8649c7","modified":1631255012669},{"_id":"public/plugins/prettify/lang-yaml.js","hash":"a3a509eb7a2298b962d8b132bd19d093c5e75b25","modified":1631255012669},{"_id":"public/plugins/prettify/prettify.css","hash":"5bd1232ffc2c60527396aaaa66b35e3826ffce00","modified":1631255012669},{"_id":"public/lib/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1631255012669},{"_id":"public/lib/fancybox/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1631255012669},{"_id":"public/lib/fancybox/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1631255012669},{"_id":"public/lib/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1631255012669},{"_id":"public/lib/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1631255012669},{"_id":"public/2021/09/10/00007-源码阅读方法/01.jpg","hash":"ec68a5c9bd23757047c04db86d370a16077ddfa9","modified":1631255012669},{"_id":"public/lib/fancybox/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1631255012669},{"_id":"public/plugins/prettify/lang-matlab.js","hash":"b71302c9a2aa5ed2b31a75ff364ec6270ac52b1b","modified":1631255012669},{"_id":"public/plugins/prettify/lang-xq.js","hash":"dd0c434083a0fd01b144eb506caedf481abc4052","modified":1631255012669},{"_id":"public/lib/fancybox/jquery.fancybox.js","hash":"39357ff994e53ea15c582b6106094396835a8be0","modified":1631255012669},{"_id":"public/plugins/prettify/prettify.js","hash":"eec92d79f0678b390289981b01866ea5dd36c090","modified":1631255012669},{"_id":"public/plugins/prettify/node_prettify.js","hash":"a3b9a2e9b334ffd6fd1b59534b260a270c96c5c1","modified":1631255012669},{"_id":"public/plugins/prettify/run_prettify.js","hash":"b029f610e84bf11d705927d92b0df4f376973a67","modified":1631255012669},{"_id":"public/lib/jquery/jquery-3.1.1.min.js","hash":"f647a6d37dc4ca055ced3cf64bbc1f490070acba","modified":1631255012669},{"_id":"public/css/style.css","hash":"8614c449c3fdf5bda25a8d0f61010fc5542a0c79","modified":1631255012669}],"Category":[{"name":"计算机","_id":"cktdz480z0007vgtxcul81gum"},{"name":"知识体系结构","parent":"cktdz480z0007vgtxcul81gum","_id":"cktdz4813000dvgtxh7g20ycf"}],"Data":[],"Page":[{"title":"关于我","date":"2021-08-30T02:09:56.000Z","tags":null,"_content":"\n\n\n <marquee><span>**用心写博客, 用心品味人生~**</span> </marquee>\n\n\n\n***Author***\n\n你好，我是 \"追风的猫~\"。我是一名在南京工作的程序员，喜欢户外和读书。\n\n\n\n<br>\n\n***Contact***\n\n> **邮箱**: shadowbubble233@gmail.com\n\n<br>\n\n\n\n***友情链接***\n\n+ [成熟稳重沈公子的博客~](https://eqshen.github.io/)\n\n","source":"about/index.md","raw":"---\ntitle: 关于我\ndate: 2021-08-30 10:09:56\ntags:\n---\n\n\n\n <marquee><span>**用心写博客, 用心品味人生~**</span> </marquee>\n\n\n\n***Author***\n\n你好，我是 \"追风的猫~\"。我是一名在南京工作的程序员，喜欢户外和读书。\n\n\n\n<br>\n\n***Contact***\n\n> **邮箱**: shadowbubble233@gmail.com\n\n<br>\n\n\n\n***友情链接***\n\n+ [成熟稳重沈公子的博客~](https://eqshen.github.io/)\n\n","updated":"2021-09-05T13:45:02.928Z","path":"about/index.html","comments":1,"layout":"page","_id":"cktdz480n0000vgtx5lj52blz","content":"<p> <marquee><span><strong>用心写博客, 用心品味人生~</strong></span> </marquee></p>\n<p><em><strong>Author</strong></em></p>\n<p>你好，我是 “追风的猫~”。我是一名在南京工作的程序员，喜欢户外和读书。</p>\n<br>\n\n<p><em><strong>Contact</strong></em></p>\n<blockquote>\n<p><strong>邮箱</strong>: <a href=\"mailto:&#x73;&#x68;&#x61;&#100;&#x6f;&#119;&#98;&#x75;&#98;&#98;&#108;&#x65;&#x32;&#51;&#x33;&#64;&#103;&#109;&#x61;&#105;&#x6c;&#x2e;&#x63;&#111;&#x6d;\">&#x73;&#x68;&#x61;&#100;&#x6f;&#119;&#98;&#x75;&#98;&#98;&#108;&#x65;&#x32;&#51;&#x33;&#64;&#103;&#109;&#x61;&#105;&#x6c;&#x2e;&#x63;&#111;&#x6d;</a></p>\n</blockquote>\n<br>\n\n\n\n<p><em><strong>友情链接</strong></em></p>\n<ul>\n<li><a href=\"https://eqshen.github.io/\">成熟稳重沈公子的博客~</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p> <marquee><span><strong>用心写博客, 用心品味人生~</strong></span> </marquee></p>\n<p><em><strong>Author</strong></em></p>\n<p>你好，我是 “追风的猫~”。我是一名在南京工作的程序员，喜欢户外和读书。</p>\n<br>\n\n<p><em><strong>Contact</strong></em></p>\n<blockquote>\n<p><strong>邮箱</strong>: <a href=\"mailto:&#x73;&#x68;&#x61;&#100;&#x6f;&#119;&#98;&#x75;&#98;&#98;&#108;&#x65;&#x32;&#51;&#x33;&#64;&#103;&#109;&#x61;&#105;&#x6c;&#x2e;&#x63;&#111;&#x6d;\">&#x73;&#x68;&#x61;&#100;&#x6f;&#119;&#98;&#x75;&#98;&#98;&#108;&#x65;&#x32;&#51;&#x33;&#64;&#103;&#109;&#x61;&#105;&#x6c;&#x2e;&#x63;&#111;&#x6d;</a></p>\n</blockquote>\n<br>\n\n\n\n<p><em><strong>友情链接</strong></em></p>\n<ul>\n<li><a href=\"https://eqshen.github.io/\">成熟稳重沈公子的博客~</a></li>\n</ul>\n"},{"title":"tags","date":"2021-08-30T02:29:53.000Z","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2021-08-30 10:29:53\n---\n","updated":"2021-08-30T02:36:13.435Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cktdz480t0002vgtx1adebk3u","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"categories","date":"2021-08-30T02:29:20.000Z","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2021-08-30 10:29:20\n---\n","updated":"2021-08-30T02:29:20.662Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cktdz480w0004vgtx63gq7kz6","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Hexo笔记","date":"2021-08-27T09:54:24.000Z","_content":"\n\n\nhexo 笔记, 归纳整理了自己遇到的常见问题。\n\n\n<div class=\"excerpt\">\n    这里写你的文章摘要，只会在首页展示，进入文章页后自动隐藏。\n</div>\n\n<!--more-->\n\n## 1 Hexo  是什么?\n\n[Hexo 官网](https://hexo.io/zh-cn/docs/)\nHexo 是一个简单, 快速的静态博客框架。\n\n\n\n### 1.1 so\n\n<br><br>\n\n#### 2 Hexo 常用命令?\n\nhexo init\n\nhexo clean\t\t\t清除缓存文件和已生成的静态文件\nhexo g \t\t\t\t生成静态文件\nhexo s \t\t\t\t启动服务器\nhexo d \t\t\t\t部署网站\n\n\nhexo new [layout] [title]\t\t新建文章\n\t-p path\n\neg.\n\thexo new post -p about/me\n\n\n\n<br><br>\n\n#### 3 Hexo 常规用法\n\n\n\n##### 3.1 配置 github 部署?\ndeploy:\n  type: 'git'\n  repo: https://access_token@github.com/[用户名]/[仓库名].git\n  branch: master\n\n<br>\n\n3.2 博客如何插入图片?\n\nnpm install hexo-renderer-marked\n\npost_asset_folder: true\nmarked:\n  prependRoot: true\n  postAsset: true\n\n\n\n```\n# 图片写法\n![](image.jpg)\n```\n\n\n\n<br>\n\n3.3 分隔目录页-\"查看更多\"\n\n<!--more-->\n\n<br>\n\n\n3.4 代码块\n```python\n​```python\n\n​```\n```\n\n\n\n\n\n\n\n","source":"_drafts/00001-Hexo笔记.md","raw":"---\ntitle: Hexo笔记\ndate: 2021-08-27 17:54:24\ntags: \ncategories:\n---\n\n\n\nhexo 笔记, 归纳整理了自己遇到的常见问题。\n\n\n<div class=\"excerpt\">\n    这里写你的文章摘要，只会在首页展示，进入文章页后自动隐藏。\n</div>\n\n<!--more-->\n\n## 1 Hexo  是什么?\n\n[Hexo 官网](https://hexo.io/zh-cn/docs/)\nHexo 是一个简单, 快速的静态博客框架。\n\n\n\n### 1.1 so\n\n<br><br>\n\n#### 2 Hexo 常用命令?\n\nhexo init\n\nhexo clean\t\t\t清除缓存文件和已生成的静态文件\nhexo g \t\t\t\t生成静态文件\nhexo s \t\t\t\t启动服务器\nhexo d \t\t\t\t部署网站\n\n\nhexo new [layout] [title]\t\t新建文章\n\t-p path\n\neg.\n\thexo new post -p about/me\n\n\n\n<br><br>\n\n#### 3 Hexo 常规用法\n\n\n\n##### 3.1 配置 github 部署?\ndeploy:\n  type: 'git'\n  repo: https://access_token@github.com/[用户名]/[仓库名].git\n  branch: master\n\n<br>\n\n3.2 博客如何插入图片?\n\nnpm install hexo-renderer-marked\n\npost_asset_folder: true\nmarked:\n  prependRoot: true\n  postAsset: true\n\n\n\n```\n# 图片写法\n![](image.jpg)\n```\n\n\n\n<br>\n\n3.3 分隔目录页-\"查看更多\"\n\n<!--more-->\n\n<br>\n\n\n3.4 代码块\n```python\n​```python\n\n​```\n```\n\n\n\n\n\n\n\n","slug":"00001-Hexo笔记","published":0,"updated":"2021-08-30T03:24:27.312Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cktdz480q0001vgtx3tp6fmeu","content":"<p>hexo 笔记, 归纳整理了自己遇到的常见问题。</p>\n<div class=\"excerpt\">\n    这里写你的文章摘要，只会在首页展示，进入文章页后自动隐藏。\n</div>\n\n<span id=\"more\"></span>\n\n<h2 id=\"1-Hexo-是什么\"><a href=\"#1-Hexo-是什么\" class=\"headerlink\" title=\"1 Hexo  是什么?\"></a>1 Hexo  是什么?</h2><p><a href=\"https://hexo.io/zh-cn/docs/\">Hexo 官网</a><br>Hexo 是一个简单, 快速的静态博客框架。</p>\n<h3 id=\"1-1-so\"><a href=\"#1-1-so\" class=\"headerlink\" title=\"1.1 so\"></a>1.1 so</h3><p><br><br></p>\n<h4 id=\"2-Hexo-常用命令\"><a href=\"#2-Hexo-常用命令\" class=\"headerlink\" title=\"2 Hexo 常用命令?\"></a>2 Hexo 常用命令?</h4><p>hexo init</p>\n<p>hexo clean            清除缓存文件和已生成的静态文件<br>hexo g                 生成静态文件<br>hexo s                 启动服务器<br>hexo d                 部署网站</p>\n<p>hexo new [layout] [title]        新建文章<br>    -p path</p>\n<p>eg.<br>    hexo new post -p about/me</p>\n<p><br><br></p>\n<h4 id=\"3-Hexo-常规用法\"><a href=\"#3-Hexo-常规用法\" class=\"headerlink\" title=\"3 Hexo 常规用法\"></a>3 Hexo 常规用法</h4><h5 id=\"3-1-配置-github-部署\"><a href=\"#3-1-配置-github-部署\" class=\"headerlink\" title=\"3.1 配置 github 部署?\"></a>3.1 配置 github 部署?</h5><p>deploy:<br>  type: ‘git’<br>  repo: <a href=\"https://access_token@github.com/[%E7%94%A8%E6%88%B7%E5%90%8D]/[%E4%BB%93%E5%BA%93%E5%90%8D].git\">https://access_token@github.com/[用户名]/[仓库名].git</a><br>  branch: master</p>\n<br>\n\n<p>3.2 博客如何插入图片?</p>\n<p>npm install hexo-renderer-marked</p>\n<p>post_asset_folder: true<br>marked:<br>  prependRoot: true<br>  postAsset: true</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 图片写法</span><br><span class=\"line\">![](image.jpg)</span><br></pre></td></tr></table></figure>\n\n\n\n<br>\n\n<p>3.3 分隔目录页-“查看更多”</p>\n<!--more-->\n\n<br>\n\n\n<p>3.4 代码块</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">​```python</span><br><span class=\"line\"></span><br><span class=\"line\">​```</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n","site":{"data":{}},"excerpt":"<p>hexo 笔记, 归纳整理了自己遇到的常见问题。</p>\n<div class=\"excerpt\">\n    这里写你的文章摘要，只会在首页展示，进入文章页后自动隐藏。\n</div>","more":"<h2 id=\"1-Hexo-是什么\"><a href=\"#1-Hexo-是什么\" class=\"headerlink\" title=\"1 Hexo  是什么?\"></a>1 Hexo  是什么?</h2><p><a href=\"https://hexo.io/zh-cn/docs/\">Hexo 官网</a><br>Hexo 是一个简单, 快速的静态博客框架。</p>\n<h3 id=\"1-1-so\"><a href=\"#1-1-so\" class=\"headerlink\" title=\"1.1 so\"></a>1.1 so</h3><p><br><br></p>\n<h4 id=\"2-Hexo-常用命令\"><a href=\"#2-Hexo-常用命令\" class=\"headerlink\" title=\"2 Hexo 常用命令?\"></a>2 Hexo 常用命令?</h4><p>hexo init</p>\n<p>hexo clean            清除缓存文件和已生成的静态文件<br>hexo g                 生成静态文件<br>hexo s                 启动服务器<br>hexo d                 部署网站</p>\n<p>hexo new [layout] [title]        新建文章<br>    -p path</p>\n<p>eg.<br>    hexo new post -p about/me</p>\n<p><br><br></p>\n<h4 id=\"3-Hexo-常规用法\"><a href=\"#3-Hexo-常规用法\" class=\"headerlink\" title=\"3 Hexo 常规用法\"></a>3 Hexo 常规用法</h4><h5 id=\"3-1-配置-github-部署\"><a href=\"#3-1-配置-github-部署\" class=\"headerlink\" title=\"3.1 配置 github 部署?\"></a>3.1 配置 github 部署?</h5><p>deploy:<br>  type: ‘git’<br>  repo: <a href=\"https://access_token@github.com/[%E7%94%A8%E6%88%B7%E5%90%8D]/[%E4%BB%93%E5%BA%93%E5%90%8D].git\">https://access_token@github.com/[用户名]/[仓库名].git</a><br>  branch: master</p>\n<br>\n\n<p>3.2 博客如何插入图片?</p>\n<p>npm install hexo-renderer-marked</p>\n<p>post_asset_folder: true<br>marked:<br>  prependRoot: true<br>  postAsset: true</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 图片写法</span><br><span class=\"line\">![](image.jpg)</span><br></pre></td></tr></table></figure>\n\n\n\n<br>\n\n<p>3.3 分隔目录页-“查看更多”</p>\n<!--more-->\n\n<br>\n\n\n<p>3.4 代码块</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">​```python</span><br><span class=\"line\"></span><br><span class=\"line\">​```</span><br></pre></td></tr></table></figure>"},{"title":"2019年8月、9月读书记录","date":"2021-08-30T02:09:56.000Z","_content":"\n\n\n为什么爱情、死亡和战争是人类文学史上三个最重要的主题？\n\n<br>\n\n我想是因为这三件事物都会将一个无法内化的绝对他者、一种无法掌控的陌生状态强行置入个体的生命。 ——《我执》\n\n<!--more-->\n\n一、《单向街005:反智的年代》\n\n二、《彼得 · 潘》\n\n他给童年虚构了各种美好，比如可以飞。也有小孩子纯粹的破坏欲，比如和海盗打架。\n\n童年让我觉得美好的地方，只有那时候没有任何背负的内心世界。\n\n三、《我执》\n\n梁文道有很多篇是在写自己的感情 回忆和失恋。\n\n> 为什么爱情、死亡和战争是人类文学史上三个最重要的主题？我想是因为这三件事物都会将一个无法内化的绝对他者、一种无法掌控的陌生状态强行置入个体的生命。而如鲍德里亚所说，战争现在已变成不可见的按钮游戏，杀人不见血；而日常的死亡已经被干净文明卫生的医疗系统隔离，爱情就一枝独秀地成为今日最普遍的经验及主题，经得起无穷诠释。正如那个耳熟能详的神话：人在被创造时本是完整的同体生物，后被分成两半，孤独的一半流落世上，永远追寻那与自己完美相合的另一半。爱情是对完满的追求，而其基础是核心性的匮乏。\n\n\n\n","source":"_drafts/00002-读书笔记.md","raw":"---\ntitle: 2019年8月、9月读书记录\ndate: 2021-08-30 10:09:56\ntags:\n---\n\n\n\n为什么爱情、死亡和战争是人类文学史上三个最重要的主题？\n\n<br>\n\n我想是因为这三件事物都会将一个无法内化的绝对他者、一种无法掌控的陌生状态强行置入个体的生命。 ——《我执》\n\n<!--more-->\n\n一、《单向街005:反智的年代》\n\n二、《彼得 · 潘》\n\n他给童年虚构了各种美好，比如可以飞。也有小孩子纯粹的破坏欲，比如和海盗打架。\n\n童年让我觉得美好的地方，只有那时候没有任何背负的内心世界。\n\n三、《我执》\n\n梁文道有很多篇是在写自己的感情 回忆和失恋。\n\n> 为什么爱情、死亡和战争是人类文学史上三个最重要的主题？我想是因为这三件事物都会将一个无法内化的绝对他者、一种无法掌控的陌生状态强行置入个体的生命。而如鲍德里亚所说，战争现在已变成不可见的按钮游戏，杀人不见血；而日常的死亡已经被干净文明卫生的医疗系统隔离，爱情就一枝独秀地成为今日最普遍的经验及主题，经得起无穷诠释。正如那个耳熟能详的神话：人在被创造时本是完整的同体生物，后被分成两半，孤独的一半流落世上，永远追寻那与自己完美相合的另一半。爱情是对完满的追求，而其基础是核心性的匮乏。\n\n\n\n","slug":"00002-读书笔记","published":0,"updated":"2021-08-30T03:24:46.063Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cktdz480u0003vgtx8ecgcdog","content":"<p>为什么爱情、死亡和战争是人类文学史上三个最重要的主题？</p>\n<br>\n\n<p>我想是因为这三件事物都会将一个无法内化的绝对他者、一种无法掌控的陌生状态强行置入个体的生命。 ——《我执》</p>\n<span id=\"more\"></span>\n\n<p>一、《单向街005:反智的年代》</p>\n<p>二、《彼得 · 潘》</p>\n<p>他给童年虚构了各种美好，比如可以飞。也有小孩子纯粹的破坏欲，比如和海盗打架。</p>\n<p>童年让我觉得美好的地方，只有那时候没有任何背负的内心世界。</p>\n<p>三、《我执》</p>\n<p>梁文道有很多篇是在写自己的感情 回忆和失恋。</p>\n<blockquote>\n<p>为什么爱情、死亡和战争是人类文学史上三个最重要的主题？我想是因为这三件事物都会将一个无法内化的绝对他者、一种无法掌控的陌生状态强行置入个体的生命。而如鲍德里亚所说，战争现在已变成不可见的按钮游戏，杀人不见血；而日常的死亡已经被干净文明卫生的医疗系统隔离，爱情就一枝独秀地成为今日最普遍的经验及主题，经得起无穷诠释。正如那个耳熟能详的神话：人在被创造时本是完整的同体生物，后被分成两半，孤独的一半流落世上，永远追寻那与自己完美相合的另一半。爱情是对完满的追求，而其基础是核心性的匮乏。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p>为什么爱情、死亡和战争是人类文学史上三个最重要的主题？</p>\n<br>\n\n<p>我想是因为这三件事物都会将一个无法内化的绝对他者、一种无法掌控的陌生状态强行置入个体的生命。 ——《我执》</p>","more":"<p>一、《单向街005:反智的年代》</p>\n<p>二、《彼得 · 潘》</p>\n<p>他给童年虚构了各种美好，比如可以飞。也有小孩子纯粹的破坏欲，比如和海盗打架。</p>\n<p>童年让我觉得美好的地方，只有那时候没有任何背负的内心世界。</p>\n<p>三、《我执》</p>\n<p>梁文道有很多篇是在写自己的感情 回忆和失恋。</p>\n<blockquote>\n<p>为什么爱情、死亡和战争是人类文学史上三个最重要的主题？我想是因为这三件事物都会将一个无法内化的绝对他者、一种无法掌控的陌生状态强行置入个体的生命。而如鲍德里亚所说，战争现在已变成不可见的按钮游戏，杀人不见血；而日常的死亡已经被干净文明卫生的医疗系统隔离，爱情就一枝独秀地成为今日最普遍的经验及主题，经得起无穷诠释。正如那个耳熟能详的神话：人在被创造时本是完整的同体生物，后被分成两半，孤独的一半流落世上，永远追寻那与自己完美相合的另一半。爱情是对完满的追求，而其基础是核心性的匮乏。</p>\n</blockquote>"},{"title":"计算机知识体系概述","date":"2021-08-30T03:21:34.000Z","_content":"\n\n\n本文整理和归纳自己的知识。\n\n<!--more-->\n\n#### 1. 知识结构概述\n\n##### 1.1 编程语言\n\n###### shell\n\n\n\n###### C/C++\n\n\n\n###### Python\n\n\n\n###### Java\n\n\n\n###### Go\n\n\n\n###### Lua\n\n\n\n##### 1.2 数据结构与算法\n\n\n\n\n\n##### 1.3 设计模式\n\n> 软件工程中，设计模式是指软件设计问题的推荐方案。\n>\n> 设计模式一般是描述如何组织代码和使用最佳实践来解决最常见的设计问题。\n>\n> 设计模式是高层次的方案，并不关注具体的实现细节，比如算法和数据结构。\n\n\n\n+ 创建型模式: 介绍处理对象创建的设计模式。\n\n+ 结构型模式: 介绍处理一个系统中不同实体（类、对象等）之间关系的设计模式。\n\n+ 行为型模式: 介绍处理系统实体之间通信的设计模式。\n\n\n\n###### 创建型模式\n\n工厂模式，如何使用工厂模式（工厂方法和抽象工厂）来初始化对象，并说明与直接实例化对象相比，使用工厂设计模式的优势。\n\n建造者模式，对于由多个对象构成的对象，介绍如何简化其创建过程。\n\n原型模式，介绍如何通过完全复制一个已有对象来创建一个新对象。\n\n\n\n###### 结构型模式\n\n适配器模式，介绍如何以最小的改变实现已有代码与外来接口的兼容。\n\n修饰器模式，介绍如何无需使用继承也能增强对象的功能。\n\n外观模式，介绍如何创建单个入口点来隐藏系统的复杂性。\n\n享元模式，介绍如何通过复用一个对象池中的对象来提高内存利用率及应用性能。\n\n模式-视图-控制器模式，介绍如何避免业务逻辑与用户界面代码的耦合，提高应用程序的可维护性。\n\n\n\n###### 行为型模式\n\n责任链模式，如何向多个接收者发送请求。\n\n命令模式，如何让应用能够取消已经执行的操作。\n\n解释器模式，介绍如何基于Python创建一种简单的语言，便于领域专家使用，而无需学习Python编程。\n\n观察者模式，介绍如何在对象发生变化时，通知已注册的相关者。\n\n状态模式，介绍如何创建一个状态机以对问题进行建模，并说明这种技术的优势。\n\n策略模式，介绍如何基于某些输入标准在程序运行期间从多个可用算法中选择一个。\n\n模板模式, 介绍如何明确区分一个算法的通用和不通用部分，以避免不必要的代码复制。\n\n\n\n\n\n\n\n##### 1.4 操作系统\n\n\n\n###### IO\n\n\n\n###### 网络编程\n\n\n\n###### 并发编程\n\n\n\n\n\n##### 1.5 计算机网络\n\n###### tcp\n\n\n\n###### udp\n\n\n\n###### http\n\n\n\n###### https\n\n\n\n###### tls\n\n\n\n###### openvpn\n\n\n\n\n\n##### 1.6 编译原理\n\n\n\n##### 1.7 计算机组成原理\n\n\n\n##### 1.8 数据库\n\n###### sqlite\n\n\n\n###### mysql\n\n\n\n###### pgsql\n\n\n\n###### mondodb\n\n\n\n###### redis\n\n\n\n##### 1.9 容器知识\n\n###### docker \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_drafts/00003-计算机知识体系概述.md","raw":"---\ntitle: 计算机知识体系概述\ndate: 2021-08-30 11:21:34\ncategories:\n  - 计算机\n  - 知识体系结构\ntags:\n  - 计算机\n  - 知识体系结构\n  - 编程语言\n  - 数据结构与算法\n  - 设计模式\n  - 操作系统\t\n  - 计算机网络\n  - 编译原理\n  - 计算机组成原理\n  - 数据库\n  - 容器技术\n---\n\n\n\n本文整理和归纳自己的知识。\n\n<!--more-->\n\n#### 1. 知识结构概述\n\n##### 1.1 编程语言\n\n###### shell\n\n\n\n###### C/C++\n\n\n\n###### Python\n\n\n\n###### Java\n\n\n\n###### Go\n\n\n\n###### Lua\n\n\n\n##### 1.2 数据结构与算法\n\n\n\n\n\n##### 1.3 设计模式\n\n> 软件工程中，设计模式是指软件设计问题的推荐方案。\n>\n> 设计模式一般是描述如何组织代码和使用最佳实践来解决最常见的设计问题。\n>\n> 设计模式是高层次的方案，并不关注具体的实现细节，比如算法和数据结构。\n\n\n\n+ 创建型模式: 介绍处理对象创建的设计模式。\n\n+ 结构型模式: 介绍处理一个系统中不同实体（类、对象等）之间关系的设计模式。\n\n+ 行为型模式: 介绍处理系统实体之间通信的设计模式。\n\n\n\n###### 创建型模式\n\n工厂模式，如何使用工厂模式（工厂方法和抽象工厂）来初始化对象，并说明与直接实例化对象相比，使用工厂设计模式的优势。\n\n建造者模式，对于由多个对象构成的对象，介绍如何简化其创建过程。\n\n原型模式，介绍如何通过完全复制一个已有对象来创建一个新对象。\n\n\n\n###### 结构型模式\n\n适配器模式，介绍如何以最小的改变实现已有代码与外来接口的兼容。\n\n修饰器模式，介绍如何无需使用继承也能增强对象的功能。\n\n外观模式，介绍如何创建单个入口点来隐藏系统的复杂性。\n\n享元模式，介绍如何通过复用一个对象池中的对象来提高内存利用率及应用性能。\n\n模式-视图-控制器模式，介绍如何避免业务逻辑与用户界面代码的耦合，提高应用程序的可维护性。\n\n\n\n###### 行为型模式\n\n责任链模式，如何向多个接收者发送请求。\n\n命令模式，如何让应用能够取消已经执行的操作。\n\n解释器模式，介绍如何基于Python创建一种简单的语言，便于领域专家使用，而无需学习Python编程。\n\n观察者模式，介绍如何在对象发生变化时，通知已注册的相关者。\n\n状态模式，介绍如何创建一个状态机以对问题进行建模，并说明这种技术的优势。\n\n策略模式，介绍如何基于某些输入标准在程序运行期间从多个可用算法中选择一个。\n\n模板模式, 介绍如何明确区分一个算法的通用和不通用部分，以避免不必要的代码复制。\n\n\n\n\n\n\n\n##### 1.4 操作系统\n\n\n\n###### IO\n\n\n\n###### 网络编程\n\n\n\n###### 并发编程\n\n\n\n\n\n##### 1.5 计算机网络\n\n###### tcp\n\n\n\n###### udp\n\n\n\n###### http\n\n\n\n###### https\n\n\n\n###### tls\n\n\n\n###### openvpn\n\n\n\n\n\n##### 1.6 编译原理\n\n\n\n##### 1.7 计算机组成原理\n\n\n\n##### 1.8 数据库\n\n###### sqlite\n\n\n\n###### mysql\n\n\n\n###### pgsql\n\n\n\n###### mondodb\n\n\n\n###### redis\n\n\n\n##### 1.9 容器知识\n\n###### docker \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"00003-计算机知识体系概述","published":0,"updated":"2021-09-05T13:03:41.559Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cktdz480w0005vgtx9gppgncn","content":"<p>本文整理和归纳自己的知识。</p>\n<span id=\"more\"></span>\n\n<h4 id=\"1-知识结构概述\"><a href=\"#1-知识结构概述\" class=\"headerlink\" title=\"1. 知识结构概述\"></a>1. 知识结构概述</h4><h5 id=\"1-1-编程语言\"><a href=\"#1-1-编程语言\" class=\"headerlink\" title=\"1.1 编程语言\"></a>1.1 编程语言</h5><h6 id=\"shell\"><a href=\"#shell\" class=\"headerlink\" title=\"shell\"></a>shell</h6><h6 id=\"C-C\"><a href=\"#C-C\" class=\"headerlink\" title=\"C/C++\"></a>C/C++</h6><h6 id=\"Python\"><a href=\"#Python\" class=\"headerlink\" title=\"Python\"></a>Python</h6><h6 id=\"Java\"><a href=\"#Java\" class=\"headerlink\" title=\"Java\"></a>Java</h6><h6 id=\"Go\"><a href=\"#Go\" class=\"headerlink\" title=\"Go\"></a>Go</h6><h6 id=\"Lua\"><a href=\"#Lua\" class=\"headerlink\" title=\"Lua\"></a>Lua</h6><h5 id=\"1-2-数据结构与算法\"><a href=\"#1-2-数据结构与算法\" class=\"headerlink\" title=\"1.2 数据结构与算法\"></a>1.2 数据结构与算法</h5><h5 id=\"1-3-设计模式\"><a href=\"#1-3-设计模式\" class=\"headerlink\" title=\"1.3 设计模式\"></a>1.3 设计模式</h5><blockquote>\n<p>软件工程中，设计模式是指软件设计问题的推荐方案。</p>\n<p>设计模式一般是描述如何组织代码和使用最佳实践来解决最常见的设计问题。</p>\n<p>设计模式是高层次的方案，并不关注具体的实现细节，比如算法和数据结构。</p>\n</blockquote>\n<ul>\n<li><p>创建型模式: 介绍处理对象创建的设计模式。</p>\n</li>\n<li><p>结构型模式: 介绍处理一个系统中不同实体（类、对象等）之间关系的设计模式。</p>\n</li>\n<li><p>行为型模式: 介绍处理系统实体之间通信的设计模式。</p>\n</li>\n</ul>\n<h6 id=\"创建型模式\"><a href=\"#创建型模式\" class=\"headerlink\" title=\"创建型模式\"></a>创建型模式</h6><p>工厂模式，如何使用工厂模式（工厂方法和抽象工厂）来初始化对象，并说明与直接实例化对象相比，使用工厂设计模式的优势。</p>\n<p>建造者模式，对于由多个对象构成的对象，介绍如何简化其创建过程。</p>\n<p>原型模式，介绍如何通过完全复制一个已有对象来创建一个新对象。</p>\n<h6 id=\"结构型模式\"><a href=\"#结构型模式\" class=\"headerlink\" title=\"结构型模式\"></a>结构型模式</h6><p>适配器模式，介绍如何以最小的改变实现已有代码与外来接口的兼容。</p>\n<p>修饰器模式，介绍如何无需使用继承也能增强对象的功能。</p>\n<p>外观模式，介绍如何创建单个入口点来隐藏系统的复杂性。</p>\n<p>享元模式，介绍如何通过复用一个对象池中的对象来提高内存利用率及应用性能。</p>\n<p>模式-视图-控制器模式，介绍如何避免业务逻辑与用户界面代码的耦合，提高应用程序的可维护性。</p>\n<h6 id=\"行为型模式\"><a href=\"#行为型模式\" class=\"headerlink\" title=\"行为型模式\"></a>行为型模式</h6><p>责任链模式，如何向多个接收者发送请求。</p>\n<p>命令模式，如何让应用能够取消已经执行的操作。</p>\n<p>解释器模式，介绍如何基于Python创建一种简单的语言，便于领域专家使用，而无需学习Python编程。</p>\n<p>观察者模式，介绍如何在对象发生变化时，通知已注册的相关者。</p>\n<p>状态模式，介绍如何创建一个状态机以对问题进行建模，并说明这种技术的优势。</p>\n<p>策略模式，介绍如何基于某些输入标准在程序运行期间从多个可用算法中选择一个。</p>\n<p>模板模式, 介绍如何明确区分一个算法的通用和不通用部分，以避免不必要的代码复制。</p>\n<h5 id=\"1-4-操作系统\"><a href=\"#1-4-操作系统\" class=\"headerlink\" title=\"1.4 操作系统\"></a>1.4 操作系统</h5><h6 id=\"IO\"><a href=\"#IO\" class=\"headerlink\" title=\"IO\"></a>IO</h6><h6 id=\"网络编程\"><a href=\"#网络编程\" class=\"headerlink\" title=\"网络编程\"></a>网络编程</h6><h6 id=\"并发编程\"><a href=\"#并发编程\" class=\"headerlink\" title=\"并发编程\"></a>并发编程</h6><h5 id=\"1-5-计算机网络\"><a href=\"#1-5-计算机网络\" class=\"headerlink\" title=\"1.5 计算机网络\"></a>1.5 计算机网络</h5><h6 id=\"tcp\"><a href=\"#tcp\" class=\"headerlink\" title=\"tcp\"></a>tcp</h6><h6 id=\"udp\"><a href=\"#udp\" class=\"headerlink\" title=\"udp\"></a>udp</h6><h6 id=\"http\"><a href=\"#http\" class=\"headerlink\" title=\"http\"></a>http</h6><h6 id=\"https\"><a href=\"#https\" class=\"headerlink\" title=\"https\"></a>https</h6><h6 id=\"tls\"><a href=\"#tls\" class=\"headerlink\" title=\"tls\"></a>tls</h6><h6 id=\"openvpn\"><a href=\"#openvpn\" class=\"headerlink\" title=\"openvpn\"></a>openvpn</h6><h5 id=\"1-6-编译原理\"><a href=\"#1-6-编译原理\" class=\"headerlink\" title=\"1.6 编译原理\"></a>1.6 编译原理</h5><h5 id=\"1-7-计算机组成原理\"><a href=\"#1-7-计算机组成原理\" class=\"headerlink\" title=\"1.7 计算机组成原理\"></a>1.7 计算机组成原理</h5><h5 id=\"1-8-数据库\"><a href=\"#1-8-数据库\" class=\"headerlink\" title=\"1.8 数据库\"></a>1.8 数据库</h5><h6 id=\"sqlite\"><a href=\"#sqlite\" class=\"headerlink\" title=\"sqlite\"></a>sqlite</h6><h6 id=\"mysql\"><a href=\"#mysql\" class=\"headerlink\" title=\"mysql\"></a>mysql</h6><h6 id=\"pgsql\"><a href=\"#pgsql\" class=\"headerlink\" title=\"pgsql\"></a>pgsql</h6><h6 id=\"mondodb\"><a href=\"#mondodb\" class=\"headerlink\" title=\"mondodb\"></a>mondodb</h6><h6 id=\"redis\"><a href=\"#redis\" class=\"headerlink\" title=\"redis\"></a>redis</h6><h5 id=\"1-9-容器知识\"><a href=\"#1-9-容器知识\" class=\"headerlink\" title=\"1.9 容器知识\"></a>1.9 容器知识</h5><h6 id=\"docker\"><a href=\"#docker\" class=\"headerlink\" title=\"docker\"></a>docker</h6>","site":{"data":{}},"excerpt":"<p>本文整理和归纳自己的知识。</p>","more":"<h4 id=\"1-知识结构概述\"><a href=\"#1-知识结构概述\" class=\"headerlink\" title=\"1. 知识结构概述\"></a>1. 知识结构概述</h4><h5 id=\"1-1-编程语言\"><a href=\"#1-1-编程语言\" class=\"headerlink\" title=\"1.1 编程语言\"></a>1.1 编程语言</h5><h6 id=\"shell\"><a href=\"#shell\" class=\"headerlink\" title=\"shell\"></a>shell</h6><h6 id=\"C-C\"><a href=\"#C-C\" class=\"headerlink\" title=\"C/C++\"></a>C/C++</h6><h6 id=\"Python\"><a href=\"#Python\" class=\"headerlink\" title=\"Python\"></a>Python</h6><h6 id=\"Java\"><a href=\"#Java\" class=\"headerlink\" title=\"Java\"></a>Java</h6><h6 id=\"Go\"><a href=\"#Go\" class=\"headerlink\" title=\"Go\"></a>Go</h6><h6 id=\"Lua\"><a href=\"#Lua\" class=\"headerlink\" title=\"Lua\"></a>Lua</h6><h5 id=\"1-2-数据结构与算法\"><a href=\"#1-2-数据结构与算法\" class=\"headerlink\" title=\"1.2 数据结构与算法\"></a>1.2 数据结构与算法</h5><h5 id=\"1-3-设计模式\"><a href=\"#1-3-设计模式\" class=\"headerlink\" title=\"1.3 设计模式\"></a>1.3 设计模式</h5><blockquote>\n<p>软件工程中，设计模式是指软件设计问题的推荐方案。</p>\n<p>设计模式一般是描述如何组织代码和使用最佳实践来解决最常见的设计问题。</p>\n<p>设计模式是高层次的方案，并不关注具体的实现细节，比如算法和数据结构。</p>\n</blockquote>\n<ul>\n<li><p>创建型模式: 介绍处理对象创建的设计模式。</p>\n</li>\n<li><p>结构型模式: 介绍处理一个系统中不同实体（类、对象等）之间关系的设计模式。</p>\n</li>\n<li><p>行为型模式: 介绍处理系统实体之间通信的设计模式。</p>\n</li>\n</ul>\n<h6 id=\"创建型模式\"><a href=\"#创建型模式\" class=\"headerlink\" title=\"创建型模式\"></a>创建型模式</h6><p>工厂模式，如何使用工厂模式（工厂方法和抽象工厂）来初始化对象，并说明与直接实例化对象相比，使用工厂设计模式的优势。</p>\n<p>建造者模式，对于由多个对象构成的对象，介绍如何简化其创建过程。</p>\n<p>原型模式，介绍如何通过完全复制一个已有对象来创建一个新对象。</p>\n<h6 id=\"结构型模式\"><a href=\"#结构型模式\" class=\"headerlink\" title=\"结构型模式\"></a>结构型模式</h6><p>适配器模式，介绍如何以最小的改变实现已有代码与外来接口的兼容。</p>\n<p>修饰器模式，介绍如何无需使用继承也能增强对象的功能。</p>\n<p>外观模式，介绍如何创建单个入口点来隐藏系统的复杂性。</p>\n<p>享元模式，介绍如何通过复用一个对象池中的对象来提高内存利用率及应用性能。</p>\n<p>模式-视图-控制器模式，介绍如何避免业务逻辑与用户界面代码的耦合，提高应用程序的可维护性。</p>\n<h6 id=\"行为型模式\"><a href=\"#行为型模式\" class=\"headerlink\" title=\"行为型模式\"></a>行为型模式</h6><p>责任链模式，如何向多个接收者发送请求。</p>\n<p>命令模式，如何让应用能够取消已经执行的操作。</p>\n<p>解释器模式，介绍如何基于Python创建一种简单的语言，便于领域专家使用，而无需学习Python编程。</p>\n<p>观察者模式，介绍如何在对象发生变化时，通知已注册的相关者。</p>\n<p>状态模式，介绍如何创建一个状态机以对问题进行建模，并说明这种技术的优势。</p>\n<p>策略模式，介绍如何基于某些输入标准在程序运行期间从多个可用算法中选择一个。</p>\n<p>模板模式, 介绍如何明确区分一个算法的通用和不通用部分，以避免不必要的代码复制。</p>\n<h5 id=\"1-4-操作系统\"><a href=\"#1-4-操作系统\" class=\"headerlink\" title=\"1.4 操作系统\"></a>1.4 操作系统</h5><h6 id=\"IO\"><a href=\"#IO\" class=\"headerlink\" title=\"IO\"></a>IO</h6><h6 id=\"网络编程\"><a href=\"#网络编程\" class=\"headerlink\" title=\"网络编程\"></a>网络编程</h6><h6 id=\"并发编程\"><a href=\"#并发编程\" class=\"headerlink\" title=\"并发编程\"></a>并发编程</h6><h5 id=\"1-5-计算机网络\"><a href=\"#1-5-计算机网络\" class=\"headerlink\" title=\"1.5 计算机网络\"></a>1.5 计算机网络</h5><h6 id=\"tcp\"><a href=\"#tcp\" class=\"headerlink\" title=\"tcp\"></a>tcp</h6><h6 id=\"udp\"><a href=\"#udp\" class=\"headerlink\" title=\"udp\"></a>udp</h6><h6 id=\"http\"><a href=\"#http\" class=\"headerlink\" title=\"http\"></a>http</h6><h6 id=\"https\"><a href=\"#https\" class=\"headerlink\" title=\"https\"></a>https</h6><h6 id=\"tls\"><a href=\"#tls\" class=\"headerlink\" title=\"tls\"></a>tls</h6><h6 id=\"openvpn\"><a href=\"#openvpn\" class=\"headerlink\" title=\"openvpn\"></a>openvpn</h6><h5 id=\"1-6-编译原理\"><a href=\"#1-6-编译原理\" class=\"headerlink\" title=\"1.6 编译原理\"></a>1.6 编译原理</h5><h5 id=\"1-7-计算机组成原理\"><a href=\"#1-7-计算机组成原理\" class=\"headerlink\" title=\"1.7 计算机组成原理\"></a>1.7 计算机组成原理</h5><h5 id=\"1-8-数据库\"><a href=\"#1-8-数据库\" class=\"headerlink\" title=\"1.8 数据库\"></a>1.8 数据库</h5><h6 id=\"sqlite\"><a href=\"#sqlite\" class=\"headerlink\" title=\"sqlite\"></a>sqlite</h6><h6 id=\"mysql\"><a href=\"#mysql\" class=\"headerlink\" title=\"mysql\"></a>mysql</h6><h6 id=\"pgsql\"><a href=\"#pgsql\" class=\"headerlink\" title=\"pgsql\"></a>pgsql</h6><h6 id=\"mondodb\"><a href=\"#mondodb\" class=\"headerlink\" title=\"mondodb\"></a>mondodb</h6><h6 id=\"redis\"><a href=\"#redis\" class=\"headerlink\" title=\"redis\"></a>redis</h6><h5 id=\"1-9-容器知识\"><a href=\"#1-9-容器知识\" class=\"headerlink\" title=\"1.9 容器知识\"></a>1.9 容器知识</h5><h6 id=\"docker\"><a href=\"#docker\" class=\"headerlink\" title=\"docker\"></a>docker</h6>"},{"title":"00004.设计模式之创建型模式","date":"2021-08-30T04:31:57.000Z","_content":"\n\n\n创建型设计模式\n\n<!--more-->\n\n##### 工厂模式\n\n客户端可以请求一个对象，而无须知道这个对象来自哪里。\n\n工厂背后的思想时简化对象的创建。\n\n与客户端自己基于类实例化直接创建对象相比，基于一个中心化函数来实现，更易于追踪创建了哪些对象。\n\n通过将创建对象的代码和使用对象的代码解耦，工厂能够降低应用维护的复杂度。\n\n工厂有两种形式：工厂方法和抽象工厂。\n\n工厂方法：一个方法，对不同的输入参数返回不同的对象；\n\n抽象工厂：用一组用于创建一系列相关事物对象的工厂方法。\n\neg. \n\nDjango 框架使用工厂方法模式来创建表单字段。\n\nDjango 的 forms 模块支持不同种类字段（CharField, EmailField）的创建和定制(max_length、required)。\n\n如果因为应用创建对象的代码分布在不同的地方，而不是仅在一个函数/方法中，你发现没法跟踪这些对象，那么应该考虑使用工厂方法模式。\n\n工厂方法集中在一个地方创建对象，使对象跟踪变得更容易。\n\n若需要将对象的创建和使用解耦，工厂方法也能排上用场。\n\n另一个应用案例与应用性能及内存使用相关。\n\n工厂方法可以在必要时创建新的对象，从而提高性能和内存使用率。\n\n若直接实例化类来创建对象，那么每次创建新对象就需要分配额外的内存。\n\n\n\nxml, atom, yaml, json\n\n.sq3 .mp3\n\n普通文本文件，虽然人类可读文件解析起来通常比二进制文件更慢，但更易于数据交换，审查和修改。\n\n\n\n优势：\n\n1 让对象的创建更容易追踪\n\n2 将对象创建与使用解耦\n\n3 提供优化内存占用和应用性能的潜力\n\n\n\n何时使用工厂模式，何时使用抽象工厂模式？\n\n通常一开始使用工厂方法，因为它更简单。如果后来发现应用需要许多工厂方法，那么将创建一系列对象的过程合并在一起更合理，从而最终引入抽象工厂。\n\n\n\n抽象工厂有一个优点，在使用工厂方法时从用户视角是看不到的，那就是抽象工厂能够通过改变激活的工厂方法动态地改变应用行为。\n\n一个经典的例子是能够让用户在使用应用时改变应用的观感，而不需要终止应用然后重新启用。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_drafts/00004-设计模式之创建型模式.md","raw":"---\ntitle: 00004.设计模式之创建型模式\ndate: 2021-08-30 12:31:57\ntags:\n  - 设计模式\n  - Python\n---\n\n\n\n创建型设计模式\n\n<!--more-->\n\n##### 工厂模式\n\n客户端可以请求一个对象，而无须知道这个对象来自哪里。\n\n工厂背后的思想时简化对象的创建。\n\n与客户端自己基于类实例化直接创建对象相比，基于一个中心化函数来实现，更易于追踪创建了哪些对象。\n\n通过将创建对象的代码和使用对象的代码解耦，工厂能够降低应用维护的复杂度。\n\n工厂有两种形式：工厂方法和抽象工厂。\n\n工厂方法：一个方法，对不同的输入参数返回不同的对象；\n\n抽象工厂：用一组用于创建一系列相关事物对象的工厂方法。\n\neg. \n\nDjango 框架使用工厂方法模式来创建表单字段。\n\nDjango 的 forms 模块支持不同种类字段（CharField, EmailField）的创建和定制(max_length、required)。\n\n如果因为应用创建对象的代码分布在不同的地方，而不是仅在一个函数/方法中，你发现没法跟踪这些对象，那么应该考虑使用工厂方法模式。\n\n工厂方法集中在一个地方创建对象，使对象跟踪变得更容易。\n\n若需要将对象的创建和使用解耦，工厂方法也能排上用场。\n\n另一个应用案例与应用性能及内存使用相关。\n\n工厂方法可以在必要时创建新的对象，从而提高性能和内存使用率。\n\n若直接实例化类来创建对象，那么每次创建新对象就需要分配额外的内存。\n\n\n\nxml, atom, yaml, json\n\n.sq3 .mp3\n\n普通文本文件，虽然人类可读文件解析起来通常比二进制文件更慢，但更易于数据交换，审查和修改。\n\n\n\n优势：\n\n1 让对象的创建更容易追踪\n\n2 将对象创建与使用解耦\n\n3 提供优化内存占用和应用性能的潜力\n\n\n\n何时使用工厂模式，何时使用抽象工厂模式？\n\n通常一开始使用工厂方法，因为它更简单。如果后来发现应用需要许多工厂方法，那么将创建一系列对象的过程合并在一起更合理，从而最终引入抽象工厂。\n\n\n\n抽象工厂有一个优点，在使用工厂方法时从用户视角是看不到的，那就是抽象工厂能够通过改变激活的工厂方法动态地改变应用行为。\n\n一个经典的例子是能够让用户在使用应用时改变应用的观感，而不需要终止应用然后重新启用。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"00004-设计模式之创建型模式","published":0,"updated":"2021-08-30T09:31:57.331Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cktdz480y0006vgtxdacsb0sv","content":"<p>创建型设计模式</p>\n<span id=\"more\"></span>\n\n<h5 id=\"工厂模式\"><a href=\"#工厂模式\" class=\"headerlink\" title=\"工厂模式\"></a>工厂模式</h5><p>客户端可以请求一个对象，而无须知道这个对象来自哪里。</p>\n<p>工厂背后的思想时简化对象的创建。</p>\n<p>与客户端自己基于类实例化直接创建对象相比，基于一个中心化函数来实现，更易于追踪创建了哪些对象。</p>\n<p>通过将创建对象的代码和使用对象的代码解耦，工厂能够降低应用维护的复杂度。</p>\n<p>工厂有两种形式：工厂方法和抽象工厂。</p>\n<p>工厂方法：一个方法，对不同的输入参数返回不同的对象；</p>\n<p>抽象工厂：用一组用于创建一系列相关事物对象的工厂方法。</p>\n<p>eg. </p>\n<p>Django 框架使用工厂方法模式来创建表单字段。</p>\n<p>Django 的 forms 模块支持不同种类字段（CharField, EmailField）的创建和定制(max_length、required)。</p>\n<p>如果因为应用创建对象的代码分布在不同的地方，而不是仅在一个函数/方法中，你发现没法跟踪这些对象，那么应该考虑使用工厂方法模式。</p>\n<p>工厂方法集中在一个地方创建对象，使对象跟踪变得更容易。</p>\n<p>若需要将对象的创建和使用解耦，工厂方法也能排上用场。</p>\n<p>另一个应用案例与应用性能及内存使用相关。</p>\n<p>工厂方法可以在必要时创建新的对象，从而提高性能和内存使用率。</p>\n<p>若直接实例化类来创建对象，那么每次创建新对象就需要分配额外的内存。</p>\n<p>xml, atom, yaml, json</p>\n<p>.sq3 .mp3</p>\n<p>普通文本文件，虽然人类可读文件解析起来通常比二进制文件更慢，但更易于数据交换，审查和修改。</p>\n<p>优势：</p>\n<p>1 让对象的创建更容易追踪</p>\n<p>2 将对象创建与使用解耦</p>\n<p>3 提供优化内存占用和应用性能的潜力</p>\n<p>何时使用工厂模式，何时使用抽象工厂模式？</p>\n<p>通常一开始使用工厂方法，因为它更简单。如果后来发现应用需要许多工厂方法，那么将创建一系列对象的过程合并在一起更合理，从而最终引入抽象工厂。</p>\n<p>抽象工厂有一个优点，在使用工厂方法时从用户视角是看不到的，那就是抽象工厂能够通过改变激活的工厂方法动态地改变应用行为。</p>\n<p>一个经典的例子是能够让用户在使用应用时改变应用的观感，而不需要终止应用然后重新启用。</p>\n","site":{"data":{}},"excerpt":"<p>创建型设计模式</p>","more":"<h5 id=\"工厂模式\"><a href=\"#工厂模式\" class=\"headerlink\" title=\"工厂模式\"></a>工厂模式</h5><p>客户端可以请求一个对象，而无须知道这个对象来自哪里。</p>\n<p>工厂背后的思想时简化对象的创建。</p>\n<p>与客户端自己基于类实例化直接创建对象相比，基于一个中心化函数来实现，更易于追踪创建了哪些对象。</p>\n<p>通过将创建对象的代码和使用对象的代码解耦，工厂能够降低应用维护的复杂度。</p>\n<p>工厂有两种形式：工厂方法和抽象工厂。</p>\n<p>工厂方法：一个方法，对不同的输入参数返回不同的对象；</p>\n<p>抽象工厂：用一组用于创建一系列相关事物对象的工厂方法。</p>\n<p>eg. </p>\n<p>Django 框架使用工厂方法模式来创建表单字段。</p>\n<p>Django 的 forms 模块支持不同种类字段（CharField, EmailField）的创建和定制(max_length、required)。</p>\n<p>如果因为应用创建对象的代码分布在不同的地方，而不是仅在一个函数/方法中，你发现没法跟踪这些对象，那么应该考虑使用工厂方法模式。</p>\n<p>工厂方法集中在一个地方创建对象，使对象跟踪变得更容易。</p>\n<p>若需要将对象的创建和使用解耦，工厂方法也能排上用场。</p>\n<p>另一个应用案例与应用性能及内存使用相关。</p>\n<p>工厂方法可以在必要时创建新的对象，从而提高性能和内存使用率。</p>\n<p>若直接实例化类来创建对象，那么每次创建新对象就需要分配额外的内存。</p>\n<p>xml, atom, yaml, json</p>\n<p>.sq3 .mp3</p>\n<p>普通文本文件，虽然人类可读文件解析起来通常比二进制文件更慢，但更易于数据交换，审查和修改。</p>\n<p>优势：</p>\n<p>1 让对象的创建更容易追踪</p>\n<p>2 将对象创建与使用解耦</p>\n<p>3 提供优化内存占用和应用性能的潜力</p>\n<p>何时使用工厂模式，何时使用抽象工厂模式？</p>\n<p>通常一开始使用工厂方法，因为它更简单。如果后来发现应用需要许多工厂方法，那么将创建一系列对象的过程合并在一起更合理，从而最终引入抽象工厂。</p>\n<p>抽象工厂有一个优点，在使用工厂方法时从用户视角是看不到的，那就是抽象工厂能够通过改变激活的工厂方法动态地改变应用行为。</p>\n<p>一个经典的例子是能够让用户在使用应用时改变应用的观感，而不需要终止应用然后重新启用。</p>"},{"title":"基于容器方式-MySQL 主从配置实践","date":"2019-09-05T05:16:07.000Z","_content":"\n![壁纸](03.jfif)\n\n<span style=\"margin-left: 32px;\">本文，基于 docker-compose 实现了 mysql 主从数据库的配置。</span>\n\n<!--more-->\n\n<br>\n\n#### 1. 概述\n\n本文，基于 docker-compose 实现了 mysql 主从数据库的配置。\n\n> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MySQL 的复制功能，可以非常方便的将一个数据库中的数据复制到很多台 MySQL 主机上面，组成一个 MySQL 集群，然后通过这个MySQL 来对外提供服务。这样，每台MySQL 主机所需承担的负载就会大大降低，整个MySQL 集群的处理能力也很容易得到提升。\n>\n>​\t<span style=\"float:right;margin-right:20px;\">---MySQL 性能调优与架构设计</span>\n\n\n\n[GIT 仓库地址](https://gitee.com/shadowbubble/mysql-master-salve-example)\n\n\n\n项目目录结构：\n\n![项目目录结构图](01.png)\n\n\n\n<br>\n\n#### 2. MySQL 主从配置\n\n\n\n##### 2.1 mysql-master 主数据库的配置参数\n\na. 主数据库的配置文件 mysql.cnf \n\n​\t***路径: ./mysql-master/conf.d/mysql.cnf***\n\n```\n[mysqld]\n\nlog-bin=mysql-bin\t\t# 开启二进制日志\nserver-id=1\t\t\t# 设置 server-id\n```\n\n\n\nb. 创建用户的SQL文件 init_db.sql\n\n​\t***路径： ./mysql-master/docker-entrypoint-inidb.d/init_db.sql***\n\n```mysql\n-- 创建用于主从同步的任务\nuse mysql;\ncreate user 'repl'@'%' identified by 'slavepass';\ngrant replication slave on *.* to 'repl'@'%';\nflush privileges;\n\nshow master status;\n```\n\n\n\nc. 运行 mysql-master 主数据库\n\n```shell\ndocker-compose build mysql-master\n\ndocker-compose up -d mysql-master\n```\n\n\n\n\n\nd. 查看 master 状态, 记录二进制文件名和位置\n\n```shell\ndocker-compose exec mysql-master sh -c 'exec mysql -uroot -p\"$MYSQL_ROOT_PASSWORD\" -e \"show master status;\"'\n```\n\n\n\n**mysql-master 指令命令一览**\n\n![mysql-master 执行命令一览](02.png)\n\n如上图所示：可以查询到 二进制日志文件为 <span style=\"color:red;\">mysql-bin.000003, Position 为 154</span>.\n\n<br>\n\n##### 2.2 配置 mysql-slave-a 从数据库-a\n\n*a. 根据路径，更新从数据库的配置文件 mysql.cnf*\n\n​\t***路径： ./mysql-slave-a/conf.d/mysql.cnf***\n\n\n\n```\n[mysqld]\n\nserver-id=2\n```\n\n\n\nb. 运行 mysql-slave-a 从数据库\n\n```shell\ndocker-compose build mysql-slave-a\n\ndocker-compose up -d mysql-slave-a\n```\n\n\n\nc. 启动 mysql-slave-a 的 slave 同步进程\n\n```shell\nmysql -uroot -p -P8001 -h127.0.0.1\n\n\nchange MASTER TO \\\n\tMASTER_HOST='mysql-master', \\\n\tMASTER_USER='repl', \\\n\tMASTER_PASSWORD='slavepass', \\\n\tMASTER_LOG_FILE='mysql-bin.000003', \\\n\tMASTER_LOG_POS=154;\n\nstart slave;\nshow slave status;\n```\n\n**<span style=\"color:red;\">【注】： MASTER_LOG_FILE 与 MASTER_LOG_POS 的内容填写 2.1 所示命令实际读取的结果。</span>**\n\n**mysql-slave-a 执行命令一览**\n\n![mysql-slave-a 执行指令一览](05.png)\n\n<br><br>\n\n##### 2.3 配置 mysql-slave-b 从数据库-b\n\n+ a. 根据路径，更新从数据库的配置文件 mysql.cnf\n\n​\t***路径： ./mysql-slave-b/conf.d/mysql.cnf***\n\n\n\n```\n[mysqld]\nserver-id=3\n```\n\n\n\nb. 运行 mysql-slave-b 从数据库\n\n```shell\ndocker-compose build mysql-slave-b\n\ndocker-compose up -d mysql-slave-b\n```\n\n\n\nc. 启动 mysql-slave-b 的 slave 同步进程\n\n```shell\nmysql -uroot -p -P8002 -h127.0.0.1\n\n\nchange MASTER TO \\\n\tMASTER_HOST='mysql-master', \\\n\tMASTER_USER='repl', \\\n\tMASTER_PASSWORD='slavepass', \\\n\tMASTER_LOG_FILE='mysql-bin.000003', \\\n\tMASTER_LOG_POS=154;\n\nstart slave;\nshow slave status;\n```\n\n**<span style=\"color:red;\">【注】： MASTER_LOG_FILE 与 MASTER_LOG_POS 的内容填写 2.1 所示命令实际读取的结果。</span>**\n\n\n\n**mysql-slave-b 执行命令一览**\n\n![mysql-slave-b 执行指令一览](06.png)\n\n<br><br>\n\n\n\n#### 3. 数据同步测试\n\nmysql-master 主数据库，创建测试数据库，数据表与数据记录，检查从数据库的数据，是否正常同步。\n\n\n\n进程列表:\n\n![进程列表](07.png)\n\n\n\n##### 3.1 mysql-master 测试命令\n\n```mysql\nmysql -uroot -p -P8000 -h127.0.0.1\n\ncreate database test_db;\nuse test_db;\n\ncreate table test_tab_user(\n\tid INTEGER PRIMARY KEY AUTO_INCREMENT COMMENT '用户编号',\n    name CHAR(32) NOT NULL COMMENT '用户名'\n);\n\ninsert into test_tab_user(NAME) values (\"nancy\"), (\"apply\"), (\"tom\"), (\"jerry\");\n\nselect * from test_tab_user;\n```\n\n\n\n**mysql-master 测试命令一览**\n\n![](08.png)\n\n\n\n##### 3.2 mysql-slave-a 测试命令\n\n```mysql\nmysql -uroot -p -P8001 -h127.0.0.1\n\nselect * from test_db.test_tab_user;\n```\n\n**mysql-slave-a 测试结果一览**\n\n![](09.png)\n\n\n\n##### 3.3 mysql-slave-b 测试命令\n\n```mysql\nmysql -uroot -p -P8002 -h127.0.0.1\n\nselect * from test_db.test_tab_user;\n```\n\n**mysql-slave-b 测试结果一览**\n\n![](10.png)\n\n\n\n<br><br>\n\n**至此，可以发现mysql-master, mysql-slave-a, mysql-slave-b 三者按预期进行同步。**\n\n\n\n<br>\n\n**参考资料**\n\n1. 《MySQL 经典教程》\n2. 《MySQL性能调优与架构设计》\n\n3.  [MySQL主从简单配置](https://www.cnblogs.com/lelehellow/p/9633315.html)\n\n4.  [mysql Official Image-Document](https://hub.docker.com/_/mysql)\n5. [Hexo 主题模板案例-喜欢这个排版](https://d2fan.com/)\n\n\n\n<br><br>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/00005-mysql主从配置实践.md","raw":"---\ntitle: 基于容器方式-MySQL 主从配置实践\ndate: 2019-09-05 13:16:07\ntags:\n  - docker\n  - mysql\n---\n\n![壁纸](03.jfif)\n\n<span style=\"margin-left: 32px;\">本文，基于 docker-compose 实现了 mysql 主从数据库的配置。</span>\n\n<!--more-->\n\n<br>\n\n#### 1. 概述\n\n本文，基于 docker-compose 实现了 mysql 主从数据库的配置。\n\n> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MySQL 的复制功能，可以非常方便的将一个数据库中的数据复制到很多台 MySQL 主机上面，组成一个 MySQL 集群，然后通过这个MySQL 来对外提供服务。这样，每台MySQL 主机所需承担的负载就会大大降低，整个MySQL 集群的处理能力也很容易得到提升。\n>\n>​\t<span style=\"float:right;margin-right:20px;\">---MySQL 性能调优与架构设计</span>\n\n\n\n[GIT 仓库地址](https://gitee.com/shadowbubble/mysql-master-salve-example)\n\n\n\n项目目录结构：\n\n![项目目录结构图](01.png)\n\n\n\n<br>\n\n#### 2. MySQL 主从配置\n\n\n\n##### 2.1 mysql-master 主数据库的配置参数\n\na. 主数据库的配置文件 mysql.cnf \n\n​\t***路径: ./mysql-master/conf.d/mysql.cnf***\n\n```\n[mysqld]\n\nlog-bin=mysql-bin\t\t# 开启二进制日志\nserver-id=1\t\t\t# 设置 server-id\n```\n\n\n\nb. 创建用户的SQL文件 init_db.sql\n\n​\t***路径： ./mysql-master/docker-entrypoint-inidb.d/init_db.sql***\n\n```mysql\n-- 创建用于主从同步的任务\nuse mysql;\ncreate user 'repl'@'%' identified by 'slavepass';\ngrant replication slave on *.* to 'repl'@'%';\nflush privileges;\n\nshow master status;\n```\n\n\n\nc. 运行 mysql-master 主数据库\n\n```shell\ndocker-compose build mysql-master\n\ndocker-compose up -d mysql-master\n```\n\n\n\n\n\nd. 查看 master 状态, 记录二进制文件名和位置\n\n```shell\ndocker-compose exec mysql-master sh -c 'exec mysql -uroot -p\"$MYSQL_ROOT_PASSWORD\" -e \"show master status;\"'\n```\n\n\n\n**mysql-master 指令命令一览**\n\n![mysql-master 执行命令一览](02.png)\n\n如上图所示：可以查询到 二进制日志文件为 <span style=\"color:red;\">mysql-bin.000003, Position 为 154</span>.\n\n<br>\n\n##### 2.2 配置 mysql-slave-a 从数据库-a\n\n*a. 根据路径，更新从数据库的配置文件 mysql.cnf*\n\n​\t***路径： ./mysql-slave-a/conf.d/mysql.cnf***\n\n\n\n```\n[mysqld]\n\nserver-id=2\n```\n\n\n\nb. 运行 mysql-slave-a 从数据库\n\n```shell\ndocker-compose build mysql-slave-a\n\ndocker-compose up -d mysql-slave-a\n```\n\n\n\nc. 启动 mysql-slave-a 的 slave 同步进程\n\n```shell\nmysql -uroot -p -P8001 -h127.0.0.1\n\n\nchange MASTER TO \\\n\tMASTER_HOST='mysql-master', \\\n\tMASTER_USER='repl', \\\n\tMASTER_PASSWORD='slavepass', \\\n\tMASTER_LOG_FILE='mysql-bin.000003', \\\n\tMASTER_LOG_POS=154;\n\nstart slave;\nshow slave status;\n```\n\n**<span style=\"color:red;\">【注】： MASTER_LOG_FILE 与 MASTER_LOG_POS 的内容填写 2.1 所示命令实际读取的结果。</span>**\n\n**mysql-slave-a 执行命令一览**\n\n![mysql-slave-a 执行指令一览](05.png)\n\n<br><br>\n\n##### 2.3 配置 mysql-slave-b 从数据库-b\n\n+ a. 根据路径，更新从数据库的配置文件 mysql.cnf\n\n​\t***路径： ./mysql-slave-b/conf.d/mysql.cnf***\n\n\n\n```\n[mysqld]\nserver-id=3\n```\n\n\n\nb. 运行 mysql-slave-b 从数据库\n\n```shell\ndocker-compose build mysql-slave-b\n\ndocker-compose up -d mysql-slave-b\n```\n\n\n\nc. 启动 mysql-slave-b 的 slave 同步进程\n\n```shell\nmysql -uroot -p -P8002 -h127.0.0.1\n\n\nchange MASTER TO \\\n\tMASTER_HOST='mysql-master', \\\n\tMASTER_USER='repl', \\\n\tMASTER_PASSWORD='slavepass', \\\n\tMASTER_LOG_FILE='mysql-bin.000003', \\\n\tMASTER_LOG_POS=154;\n\nstart slave;\nshow slave status;\n```\n\n**<span style=\"color:red;\">【注】： MASTER_LOG_FILE 与 MASTER_LOG_POS 的内容填写 2.1 所示命令实际读取的结果。</span>**\n\n\n\n**mysql-slave-b 执行命令一览**\n\n![mysql-slave-b 执行指令一览](06.png)\n\n<br><br>\n\n\n\n#### 3. 数据同步测试\n\nmysql-master 主数据库，创建测试数据库，数据表与数据记录，检查从数据库的数据，是否正常同步。\n\n\n\n进程列表:\n\n![进程列表](07.png)\n\n\n\n##### 3.1 mysql-master 测试命令\n\n```mysql\nmysql -uroot -p -P8000 -h127.0.0.1\n\ncreate database test_db;\nuse test_db;\n\ncreate table test_tab_user(\n\tid INTEGER PRIMARY KEY AUTO_INCREMENT COMMENT '用户编号',\n    name CHAR(32) NOT NULL COMMENT '用户名'\n);\n\ninsert into test_tab_user(NAME) values (\"nancy\"), (\"apply\"), (\"tom\"), (\"jerry\");\n\nselect * from test_tab_user;\n```\n\n\n\n**mysql-master 测试命令一览**\n\n![](08.png)\n\n\n\n##### 3.2 mysql-slave-a 测试命令\n\n```mysql\nmysql -uroot -p -P8001 -h127.0.0.1\n\nselect * from test_db.test_tab_user;\n```\n\n**mysql-slave-a 测试结果一览**\n\n![](09.png)\n\n\n\n##### 3.3 mysql-slave-b 测试命令\n\n```mysql\nmysql -uroot -p -P8002 -h127.0.0.1\n\nselect * from test_db.test_tab_user;\n```\n\n**mysql-slave-b 测试结果一览**\n\n![](10.png)\n\n\n\n<br><br>\n\n**至此，可以发现mysql-master, mysql-slave-a, mysql-slave-b 三者按预期进行同步。**\n\n\n\n<br>\n\n**参考资料**\n\n1. 《MySQL 经典教程》\n2. 《MySQL性能调优与架构设计》\n\n3.  [MySQL主从简单配置](https://www.cnblogs.com/lelehellow/p/9633315.html)\n\n4.  [mysql Official Image-Document](https://hub.docker.com/_/mysql)\n5. [Hexo 主题模板案例-喜欢这个排版](https://d2fan.com/)\n\n\n\n<br><br>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"00005-mysql主从配置实践","published":1,"updated":"2021-09-10T03:59:16.365Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cktdz48100009vgtxca939rqc","content":"<p><img src=\"/2019/09/05/00005-mysql%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE%E5%AE%9E%E8%B7%B5/03.jfif\" alt=\"壁纸\"></p>\n<p><span style=\"margin-left: 32px;\">本文，基于 docker-compose 实现了 mysql 主从数据库的配置。</span></p>\n<span id=\"more\"></span>\n\n<br>\n\n<h4 id=\"1-概述\"><a href=\"#1-概述\" class=\"headerlink\" title=\"1. 概述\"></a>1. 概述</h4><p>本文，基于 docker-compose 实现了 mysql 主从数据库的配置。</p>\n<blockquote>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MySQL 的复制功能，可以非常方便的将一个数据库中的数据复制到很多台 MySQL 主机上面，组成一个 MySQL 集群，然后通过这个MySQL 来对外提供服务。这样，每台MySQL 主机所需承担的负载就会大大降低，整个MySQL 集群的处理能力也很容易得到提升。</p>\n<p>​    <span style=\"float:right;margin-right:20px;\">—MySQL 性能调优与架构设计</span></p>\n</blockquote>\n<p><a href=\"https://gitee.com/shadowbubble/mysql-master-salve-example\">GIT 仓库地址</a></p>\n<p>项目目录结构：</p>\n<p><img src=\"/2019/09/05/00005-mysql%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE%E5%AE%9E%E8%B7%B5/01.png\" alt=\"项目目录结构图\"></p>\n<br>\n\n<h4 id=\"2-MySQL-主从配置\"><a href=\"#2-MySQL-主从配置\" class=\"headerlink\" title=\"2. MySQL 主从配置\"></a>2. MySQL 主从配置</h4><h5 id=\"2-1-mysql-master-主数据库的配置参数\"><a href=\"#2-1-mysql-master-主数据库的配置参数\" class=\"headerlink\" title=\"2.1 mysql-master 主数据库的配置参数\"></a>2.1 mysql-master 主数据库的配置参数</h5><p>a. 主数据库的配置文件 mysql.cnf </p>\n<p>​    <em><strong>路径: ./mysql-master/conf.d/mysql.cnf</strong></em></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mysqld]</span><br><span class=\"line\"></span><br><span class=\"line\">log-bin=mysql-bin\t\t# 开启二进制日志</span><br><span class=\"line\">server-id=1\t\t\t# 设置 server-id</span><br></pre></td></tr></table></figure>\n\n\n\n<p>b. 创建用户的SQL文件 init_db.sql</p>\n<p>​    <em><strong>路径： ./mysql-master/docker-entrypoint-inidb.d/init_db.sql</strong></em></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-- 创建用于主从同步的任务</span><br><span class=\"line\">use mysql;</span><br><span class=\"line\">create user &#x27;repl&#x27;@&#x27;%&#x27; identified by &#x27;slavepass&#x27;;</span><br><span class=\"line\">grant replication slave on *.* to &#x27;repl&#x27;@&#x27;%&#x27;;</span><br><span class=\"line\">flush privileges;</span><br><span class=\"line\"></span><br><span class=\"line\">show master status;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>c. 运行 mysql-master 主数据库</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose build mysql-master</span><br><span class=\"line\"></span><br><span class=\"line\">docker-compose up -d mysql-master</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p>d. 查看 master 状态, 记录二进制文件名和位置</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose exec mysql-master sh -c &#x27;exec mysql -uroot -p&quot;$MYSQL_ROOT_PASSWORD&quot; -e &quot;show master status;&quot;&#x27;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><strong>mysql-master 指令命令一览</strong></p>\n<p><img src=\"/2019/09/05/00005-mysql%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE%E5%AE%9E%E8%B7%B5/02.png\" alt=\"mysql-master 执行命令一览\"></p>\n<p>如上图所示：可以查询到 二进制日志文件为 <span style=\"color:red;\">mysql-bin.000003, Position 为 154</span>.</p>\n<br>\n\n<h5 id=\"2-2-配置-mysql-slave-a-从数据库-a\"><a href=\"#2-2-配置-mysql-slave-a-从数据库-a\" class=\"headerlink\" title=\"2.2 配置 mysql-slave-a 从数据库-a\"></a>2.2 配置 mysql-slave-a 从数据库-a</h5><p><em>a. 根据路径，更新从数据库的配置文件 mysql.cnf</em></p>\n<p>​    <em><strong>路径： ./mysql-slave-a/conf.d/mysql.cnf</strong></em></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mysqld]</span><br><span class=\"line\"></span><br><span class=\"line\">server-id=2</span><br></pre></td></tr></table></figure>\n\n\n\n<p>b. 运行 mysql-slave-a 从数据库</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose build mysql-slave-a</span><br><span class=\"line\"></span><br><span class=\"line\">docker-compose up -d mysql-slave-a</span><br></pre></td></tr></table></figure>\n\n\n\n<p>c. 启动 mysql-slave-a 的 slave 同步进程</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -uroot -p -P8001 -h127.0.0.1</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">change MASTER TO \\</span><br><span class=\"line\">\tMASTER_HOST=&#x27;mysql-master&#x27;, \\</span><br><span class=\"line\">\tMASTER_USER=&#x27;repl&#x27;, \\</span><br><span class=\"line\">\tMASTER_PASSWORD=&#x27;slavepass&#x27;, \\</span><br><span class=\"line\">\tMASTER_LOG_FILE=&#x27;mysql-bin.000003&#x27;, \\</span><br><span class=\"line\">\tMASTER_LOG_POS=154;</span><br><span class=\"line\"></span><br><span class=\"line\">start slave;</span><br><span class=\"line\">show slave status;</span><br></pre></td></tr></table></figure>\n\n<p><strong><span style=\"color:red;\">【注】： MASTER_LOG_FILE 与 MASTER_LOG_POS 的内容填写 2.1 所示命令实际读取的结果。</span></strong></p>\n<p><strong>mysql-slave-a 执行命令一览</strong></p>\n<p><img src=\"/2019/09/05/00005-mysql%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE%E5%AE%9E%E8%B7%B5/05.png\" alt=\"mysql-slave-a 执行指令一览\"></p>\n<p><br><br></p>\n<h5 id=\"2-3-配置-mysql-slave-b-从数据库-b\"><a href=\"#2-3-配置-mysql-slave-b-从数据库-b\" class=\"headerlink\" title=\"2.3 配置 mysql-slave-b 从数据库-b\"></a>2.3 配置 mysql-slave-b 从数据库-b</h5><ul>\n<li>a. 根据路径，更新从数据库的配置文件 mysql.cnf</li>\n</ul>\n<p>​    <em><strong>路径： ./mysql-slave-b/conf.d/mysql.cnf</strong></em></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mysqld]</span><br><span class=\"line\">server-id=3</span><br></pre></td></tr></table></figure>\n\n\n\n<p>b. 运行 mysql-slave-b 从数据库</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose build mysql-slave-b</span><br><span class=\"line\"></span><br><span class=\"line\">docker-compose up -d mysql-slave-b</span><br></pre></td></tr></table></figure>\n\n\n\n<p>c. 启动 mysql-slave-b 的 slave 同步进程</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -uroot -p -P8002 -h127.0.0.1</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">change MASTER TO \\</span><br><span class=\"line\">\tMASTER_HOST=&#x27;mysql-master&#x27;, \\</span><br><span class=\"line\">\tMASTER_USER=&#x27;repl&#x27;, \\</span><br><span class=\"line\">\tMASTER_PASSWORD=&#x27;slavepass&#x27;, \\</span><br><span class=\"line\">\tMASTER_LOG_FILE=&#x27;mysql-bin.000003&#x27;, \\</span><br><span class=\"line\">\tMASTER_LOG_POS=154;</span><br><span class=\"line\"></span><br><span class=\"line\">start slave;</span><br><span class=\"line\">show slave status;</span><br></pre></td></tr></table></figure>\n\n<p><strong><span style=\"color:red;\">【注】： MASTER_LOG_FILE 与 MASTER_LOG_POS 的内容填写 2.1 所示命令实际读取的结果。</span></strong></p>\n<p><strong>mysql-slave-b 执行命令一览</strong></p>\n<p><img src=\"/2019/09/05/00005-mysql%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE%E5%AE%9E%E8%B7%B5/06.png\" alt=\"mysql-slave-b 执行指令一览\"></p>\n<p><br><br></p>\n<h4 id=\"3-数据同步测试\"><a href=\"#3-数据同步测试\" class=\"headerlink\" title=\"3. 数据同步测试\"></a>3. 数据同步测试</h4><p>mysql-master 主数据库，创建测试数据库，数据表与数据记录，检查从数据库的数据，是否正常同步。</p>\n<p>进程列表:</p>\n<p><img src=\"/2019/09/05/00005-mysql%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE%E5%AE%9E%E8%B7%B5/07.png\" alt=\"进程列表\"></p>\n<h5 id=\"3-1-mysql-master-测试命令\"><a href=\"#3-1-mysql-master-测试命令\" class=\"headerlink\" title=\"3.1 mysql-master 测试命令\"></a>3.1 mysql-master 测试命令</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -uroot -p -P8000 -h127.0.0.1</span><br><span class=\"line\"></span><br><span class=\"line\">create database test_db;</span><br><span class=\"line\">use test_db;</span><br><span class=\"line\"></span><br><span class=\"line\">create table test_tab_user(</span><br><span class=\"line\">\tid INTEGER PRIMARY KEY AUTO_INCREMENT COMMENT &#x27;用户编号&#x27;,</span><br><span class=\"line\">    name CHAR(32) NOT NULL COMMENT &#x27;用户名&#x27;</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\">insert into test_tab_user(NAME) values (&quot;nancy&quot;), (&quot;apply&quot;), (&quot;tom&quot;), (&quot;jerry&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">select * from test_tab_user;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><strong>mysql-master 测试命令一览</strong></p>\n<p><img src=\"/2019/09/05/00005-mysql%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE%E5%AE%9E%E8%B7%B5/08.png\"></p>\n<h5 id=\"3-2-mysql-slave-a-测试命令\"><a href=\"#3-2-mysql-slave-a-测试命令\" class=\"headerlink\" title=\"3.2 mysql-slave-a 测试命令\"></a>3.2 mysql-slave-a 测试命令</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -uroot -p -P8001 -h127.0.0.1</span><br><span class=\"line\"></span><br><span class=\"line\">select * from test_db.test_tab_user;</span><br></pre></td></tr></table></figure>\n\n<p><strong>mysql-slave-a 测试结果一览</strong></p>\n<p><img src=\"/2019/09/05/00005-mysql%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE%E5%AE%9E%E8%B7%B5/09.png\"></p>\n<h5 id=\"3-3-mysql-slave-b-测试命令\"><a href=\"#3-3-mysql-slave-b-测试命令\" class=\"headerlink\" title=\"3.3 mysql-slave-b 测试命令\"></a>3.3 mysql-slave-b 测试命令</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -uroot -p -P8002 -h127.0.0.1</span><br><span class=\"line\"></span><br><span class=\"line\">select * from test_db.test_tab_user;</span><br></pre></td></tr></table></figure>\n\n<p><strong>mysql-slave-b 测试结果一览</strong></p>\n<p><img src=\"/2019/09/05/00005-mysql%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE%E5%AE%9E%E8%B7%B5/10.png\"></p>\n<p><br><br></p>\n<p><strong>至此，可以发现mysql-master, mysql-slave-a, mysql-slave-b 三者按预期进行同步。</strong></p>\n<br>\n\n<p><strong>参考资料</strong></p>\n<ol>\n<li><p>《MySQL 经典教程》</p>\n</li>\n<li><p>《MySQL性能调优与架构设计》</p>\n</li>\n<li><p> <a href=\"https://www.cnblogs.com/lelehellow/p/9633315.html\">MySQL主从简单配置</a></p>\n</li>\n<li><p> <a href=\"https://hub.docker.com/_/mysql\">mysql Official Image-Document</a></p>\n</li>\n<li><p><a href=\"https://d2fan.com/\">Hexo 主题模板案例-喜欢这个排版</a></p>\n</li>\n</ol>\n<p><br><br></p>\n","site":{"data":{}},"excerpt":"<p><img src=\"/2019/09/05/00005-mysql%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE%E5%AE%9E%E8%B7%B5/03.jfif\" alt=\"壁纸\"></p>\n<p><span style=\"margin-left: 32px;\">本文，基于 docker-compose 实现了 mysql 主从数据库的配置。</span></p>","more":"<br>\n\n<h4 id=\"1-概述\"><a href=\"#1-概述\" class=\"headerlink\" title=\"1. 概述\"></a>1. 概述</h4><p>本文，基于 docker-compose 实现了 mysql 主从数据库的配置。</p>\n<blockquote>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MySQL 的复制功能，可以非常方便的将一个数据库中的数据复制到很多台 MySQL 主机上面，组成一个 MySQL 集群，然后通过这个MySQL 来对外提供服务。这样，每台MySQL 主机所需承担的负载就会大大降低，整个MySQL 集群的处理能力也很容易得到提升。</p>\n<p>​    <span style=\"float:right;margin-right:20px;\">—MySQL 性能调优与架构设计</span></p>\n</blockquote>\n<p><a href=\"https://gitee.com/shadowbubble/mysql-master-salve-example\">GIT 仓库地址</a></p>\n<p>项目目录结构：</p>\n<p><img src=\"/2019/09/05/00005-mysql%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE%E5%AE%9E%E8%B7%B5/01.png\" alt=\"项目目录结构图\"></p>\n<br>\n\n<h4 id=\"2-MySQL-主从配置\"><a href=\"#2-MySQL-主从配置\" class=\"headerlink\" title=\"2. MySQL 主从配置\"></a>2. MySQL 主从配置</h4><h5 id=\"2-1-mysql-master-主数据库的配置参数\"><a href=\"#2-1-mysql-master-主数据库的配置参数\" class=\"headerlink\" title=\"2.1 mysql-master 主数据库的配置参数\"></a>2.1 mysql-master 主数据库的配置参数</h5><p>a. 主数据库的配置文件 mysql.cnf </p>\n<p>​    <em><strong>路径: ./mysql-master/conf.d/mysql.cnf</strong></em></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mysqld]</span><br><span class=\"line\"></span><br><span class=\"line\">log-bin=mysql-bin\t\t# 开启二进制日志</span><br><span class=\"line\">server-id=1\t\t\t# 设置 server-id</span><br></pre></td></tr></table></figure>\n\n\n\n<p>b. 创建用户的SQL文件 init_db.sql</p>\n<p>​    <em><strong>路径： ./mysql-master/docker-entrypoint-inidb.d/init_db.sql</strong></em></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-- 创建用于主从同步的任务</span><br><span class=\"line\">use mysql;</span><br><span class=\"line\">create user &#x27;repl&#x27;@&#x27;%&#x27; identified by &#x27;slavepass&#x27;;</span><br><span class=\"line\">grant replication slave on *.* to &#x27;repl&#x27;@&#x27;%&#x27;;</span><br><span class=\"line\">flush privileges;</span><br><span class=\"line\"></span><br><span class=\"line\">show master status;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>c. 运行 mysql-master 主数据库</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose build mysql-master</span><br><span class=\"line\"></span><br><span class=\"line\">docker-compose up -d mysql-master</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p>d. 查看 master 状态, 记录二进制文件名和位置</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose exec mysql-master sh -c &#x27;exec mysql -uroot -p&quot;$MYSQL_ROOT_PASSWORD&quot; -e &quot;show master status;&quot;&#x27;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><strong>mysql-master 指令命令一览</strong></p>\n<p><img src=\"/2019/09/05/00005-mysql%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE%E5%AE%9E%E8%B7%B5/02.png\" alt=\"mysql-master 执行命令一览\"></p>\n<p>如上图所示：可以查询到 二进制日志文件为 <span style=\"color:red;\">mysql-bin.000003, Position 为 154</span>.</p>\n<br>\n\n<h5 id=\"2-2-配置-mysql-slave-a-从数据库-a\"><a href=\"#2-2-配置-mysql-slave-a-从数据库-a\" class=\"headerlink\" title=\"2.2 配置 mysql-slave-a 从数据库-a\"></a>2.2 配置 mysql-slave-a 从数据库-a</h5><p><em>a. 根据路径，更新从数据库的配置文件 mysql.cnf</em></p>\n<p>​    <em><strong>路径： ./mysql-slave-a/conf.d/mysql.cnf</strong></em></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mysqld]</span><br><span class=\"line\"></span><br><span class=\"line\">server-id=2</span><br></pre></td></tr></table></figure>\n\n\n\n<p>b. 运行 mysql-slave-a 从数据库</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose build mysql-slave-a</span><br><span class=\"line\"></span><br><span class=\"line\">docker-compose up -d mysql-slave-a</span><br></pre></td></tr></table></figure>\n\n\n\n<p>c. 启动 mysql-slave-a 的 slave 同步进程</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -uroot -p -P8001 -h127.0.0.1</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">change MASTER TO \\</span><br><span class=\"line\">\tMASTER_HOST=&#x27;mysql-master&#x27;, \\</span><br><span class=\"line\">\tMASTER_USER=&#x27;repl&#x27;, \\</span><br><span class=\"line\">\tMASTER_PASSWORD=&#x27;slavepass&#x27;, \\</span><br><span class=\"line\">\tMASTER_LOG_FILE=&#x27;mysql-bin.000003&#x27;, \\</span><br><span class=\"line\">\tMASTER_LOG_POS=154;</span><br><span class=\"line\"></span><br><span class=\"line\">start slave;</span><br><span class=\"line\">show slave status;</span><br></pre></td></tr></table></figure>\n\n<p><strong><span style=\"color:red;\">【注】： MASTER_LOG_FILE 与 MASTER_LOG_POS 的内容填写 2.1 所示命令实际读取的结果。</span></strong></p>\n<p><strong>mysql-slave-a 执行命令一览</strong></p>\n<p><img src=\"/2019/09/05/00005-mysql%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE%E5%AE%9E%E8%B7%B5/05.png\" alt=\"mysql-slave-a 执行指令一览\"></p>\n<p><br><br></p>\n<h5 id=\"2-3-配置-mysql-slave-b-从数据库-b\"><a href=\"#2-3-配置-mysql-slave-b-从数据库-b\" class=\"headerlink\" title=\"2.3 配置 mysql-slave-b 从数据库-b\"></a>2.3 配置 mysql-slave-b 从数据库-b</h5><ul>\n<li>a. 根据路径，更新从数据库的配置文件 mysql.cnf</li>\n</ul>\n<p>​    <em><strong>路径： ./mysql-slave-b/conf.d/mysql.cnf</strong></em></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mysqld]</span><br><span class=\"line\">server-id=3</span><br></pre></td></tr></table></figure>\n\n\n\n<p>b. 运行 mysql-slave-b 从数据库</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose build mysql-slave-b</span><br><span class=\"line\"></span><br><span class=\"line\">docker-compose up -d mysql-slave-b</span><br></pre></td></tr></table></figure>\n\n\n\n<p>c. 启动 mysql-slave-b 的 slave 同步进程</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -uroot -p -P8002 -h127.0.0.1</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">change MASTER TO \\</span><br><span class=\"line\">\tMASTER_HOST=&#x27;mysql-master&#x27;, \\</span><br><span class=\"line\">\tMASTER_USER=&#x27;repl&#x27;, \\</span><br><span class=\"line\">\tMASTER_PASSWORD=&#x27;slavepass&#x27;, \\</span><br><span class=\"line\">\tMASTER_LOG_FILE=&#x27;mysql-bin.000003&#x27;, \\</span><br><span class=\"line\">\tMASTER_LOG_POS=154;</span><br><span class=\"line\"></span><br><span class=\"line\">start slave;</span><br><span class=\"line\">show slave status;</span><br></pre></td></tr></table></figure>\n\n<p><strong><span style=\"color:red;\">【注】： MASTER_LOG_FILE 与 MASTER_LOG_POS 的内容填写 2.1 所示命令实际读取的结果。</span></strong></p>\n<p><strong>mysql-slave-b 执行命令一览</strong></p>\n<p><img src=\"/2019/09/05/00005-mysql%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE%E5%AE%9E%E8%B7%B5/06.png\" alt=\"mysql-slave-b 执行指令一览\"></p>\n<p><br><br></p>\n<h4 id=\"3-数据同步测试\"><a href=\"#3-数据同步测试\" class=\"headerlink\" title=\"3. 数据同步测试\"></a>3. 数据同步测试</h4><p>mysql-master 主数据库，创建测试数据库，数据表与数据记录，检查从数据库的数据，是否正常同步。</p>\n<p>进程列表:</p>\n<p><img src=\"/2019/09/05/00005-mysql%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE%E5%AE%9E%E8%B7%B5/07.png\" alt=\"进程列表\"></p>\n<h5 id=\"3-1-mysql-master-测试命令\"><a href=\"#3-1-mysql-master-测试命令\" class=\"headerlink\" title=\"3.1 mysql-master 测试命令\"></a>3.1 mysql-master 测试命令</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -uroot -p -P8000 -h127.0.0.1</span><br><span class=\"line\"></span><br><span class=\"line\">create database test_db;</span><br><span class=\"line\">use test_db;</span><br><span class=\"line\"></span><br><span class=\"line\">create table test_tab_user(</span><br><span class=\"line\">\tid INTEGER PRIMARY KEY AUTO_INCREMENT COMMENT &#x27;用户编号&#x27;,</span><br><span class=\"line\">    name CHAR(32) NOT NULL COMMENT &#x27;用户名&#x27;</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\">insert into test_tab_user(NAME) values (&quot;nancy&quot;), (&quot;apply&quot;), (&quot;tom&quot;), (&quot;jerry&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">select * from test_tab_user;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><strong>mysql-master 测试命令一览</strong></p>\n<p><img src=\"/2019/09/05/00005-mysql%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE%E5%AE%9E%E8%B7%B5/08.png\"></p>\n<h5 id=\"3-2-mysql-slave-a-测试命令\"><a href=\"#3-2-mysql-slave-a-测试命令\" class=\"headerlink\" title=\"3.2 mysql-slave-a 测试命令\"></a>3.2 mysql-slave-a 测试命令</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -uroot -p -P8001 -h127.0.0.1</span><br><span class=\"line\"></span><br><span class=\"line\">select * from test_db.test_tab_user;</span><br></pre></td></tr></table></figure>\n\n<p><strong>mysql-slave-a 测试结果一览</strong></p>\n<p><img src=\"/2019/09/05/00005-mysql%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE%E5%AE%9E%E8%B7%B5/09.png\"></p>\n<h5 id=\"3-3-mysql-slave-b-测试命令\"><a href=\"#3-3-mysql-slave-b-测试命令\" class=\"headerlink\" title=\"3.3 mysql-slave-b 测试命令\"></a>3.3 mysql-slave-b 测试命令</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -uroot -p -P8002 -h127.0.0.1</span><br><span class=\"line\"></span><br><span class=\"line\">select * from test_db.test_tab_user;</span><br></pre></td></tr></table></figure>\n\n<p><strong>mysql-slave-b 测试结果一览</strong></p>\n<p><img src=\"/2019/09/05/00005-mysql%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE%E5%AE%9E%E8%B7%B5/10.png\"></p>\n<p><br><br></p>\n<p><strong>至此，可以发现mysql-master, mysql-slave-a, mysql-slave-b 三者按预期进行同步。</strong></p>\n<br>\n\n<p><strong>参考资料</strong></p>\n<ol>\n<li><p>《MySQL 经典教程》</p>\n</li>\n<li><p>《MySQL性能调优与架构设计》</p>\n</li>\n<li><p> <a href=\"https://www.cnblogs.com/lelehellow/p/9633315.html\">MySQL主从简单配置</a></p>\n</li>\n<li><p> <a href=\"https://hub.docker.com/_/mysql\">mysql Official Image-Document</a></p>\n</li>\n<li><p><a href=\"https://d2fan.com/\">Hexo 主题模板案例-喜欢这个排版</a></p>\n</li>\n</ol>\n<p><br><br></p>"},{"title":"attrdict 模块浅析","date":"2020-03-03T16:27:09.000Z","_content":"\n\n\n![](02.jpg)\n\n\n\n<span style=\"margin-left: 32px;\">attrdict 模块，允许创建属性风格访问的字典类, python中访问嵌套字典的键值属性，语法冗长, 借助这个库，可以实现类似 JavaScript 访问嵌套对象属性的效果。</span>\n\n<span style=\"margin-left: 32px;\">data[\"Schedule\"][\"events\"][\"speakers\"][0][\"name\"] => data.Schedule.events[0].name</span>\n\n\n\n<!--more-->\n\n\n\n<br>\n\n#### 1. 概述\n\n##### 1.1 attrdict 模块\n\n<span style=\"margin-left: 32px;\">允许属性风格访问的字典类。</span>\n\n\n\n##### 1.2 我为什么喜欢这个库？\n\n<p style=\"margin-left: 20px;\">设想存在以下场景，我们有一个 json 文件，需要读入到内存中，供程序访问。</p>\n\nosconfeed.json\n\n```json\n{\"Schedule\": {\n    \n    \"conferences\": [{\"serial\": 115 }],\n    \"events\": [\n      {\n        \"serial\": 34756,\n        \"name\": \"Graph Theory You Need to Know\",\n        \"event_type\": \"40-minute conference session\",\n\n        \"time_start\": \"2014-07-22 14:30:00\",\n        \"time_stop\": \"2014-07-22 15:10:00\",\n        \"venue_serial\": 1452,\n        \"description\": \"A brief and friendly tour of the basics of graph theory, including a description and classification of the kinds of graphs and some interesting problems they can be employed to solve.\",\n        \"website_url\": \"http://oscon.com/oscon2014/public/schedule/detail/34756\",\n        \"speakers\": [137697],\n        \"categories\": [\n          \"Computational Thinking\"\n        ]\n      },\n      {\n        \"serial\": 34757,\n        \"name\": \"The Data Structures (You Think) You Need to Know\",\n        \"event_type\": \"40-minute conference session\",\n\n        \"time_start\": \"2014-07-23 13:40:00\",\n        \"time_stop\": \"2014-07-23 14:20:00\",\n        \"venue_serial\": 1448,\n        \"description\": \"A fun and approachable tour of some otherwise intimidating data structures. Learn how to solve difficult problems efficiently through the clever organization and linking of data.\",\n        \"website_url\": \"http://oscon.com/oscon2014/public/schedule/detail/34757\",\n        \"speakers\": [137697],\n        \"categories\": [\n          \"Computational Thinking\"\n        ]\n      }\n  ]\n}}\n```\n\n\n\n**我们可以如下访问编码：**\n\n```python\nimport json\n\n\ndef load_data(filepath):\n    with open(filepath, 'r') as fp:\n        return json.dumps(fp.read())\n\n\ndef do_something():\n    data = load_data('./osconfeed.json')\n    print(data[\"Schedule\"][\"events\"][\"serial\"])\t\t\t\t\t\t\n    print(data[\"Schedule\"][\"events\"][\"speakers\"][0][\"serial\"])\n    print(data[\"Schedule\"][\"events\"][\"speakers\"][0][\"name\"])\n    # do something...\n```\n\n<p><span style=\"margin-left: 32px;\">通过 json库，</span>我们可以很容易把 json 文件的内容，转换为 Python 的 dict 对象，进而通过 dict 来访问数据。不过 data[\"Schedule\"][\"events\"][\"speakers\"][0][\"name\"] 这种语法冗长。在 JavaScript 中，可以使用 data.Schedule.events[0].name  来查询这个值。 幸运的是，通过 attrdict 模块，就可以很容易的做到。</p>\n\n\n\n```python\nimport json\nfrom attrdict import AttrDict\n\ndef load_data(filepath):\n    with open(filepath, 'r') as fp:\n    \treturn AttrDict(json.dumps(fp.read()))\n\n    \ndef do_something():\n    data = load_data('./osconfeed.json')\n    print(data.Schedule.events.serial)\t\t\t\t\t\t\n    print(data.Schedule.events.speakers[0].serial)\n    print(data.Schedule.events.speakers[0].name)\n    # do something...\n```\n\n<br>\n\n\n\n#### 2. 原理浅析\n\nPython 访问对象的属性\n\n\n\n```\nPython中访问对象的属性，使用了 “.” 操作符。 \n\nobj.attr  \t=>\tgetattr(obj, attr)  \t\t=> \t__getattr__(self, obj, attr)\t\t\t\t\nobj.attr=val\t=> \tsetattr(obj, attr, val) \t=> \t__setattr__(self, obj, attr, val)\t\t\n```\n\n<span style=\"margin-left: 32px;\">故借助一个代理类，</span>重新实现上述两个方法，可以以访问属性的方式，来访问 dict 对象的键值属性。\n\n\n\n\n\n<br>\n\n#### 3. 源码浅析\n\n\n\n\n\n\n\n<br>\n\n#### 4. 拓展阅读\n\n**《流畅的Python》** 第19章 动态属性和特性，实现了 FrozenJSON 类，比大多数实现都简单。这个类能递归自动处理嵌套的映射和列表。\n\n\n\n<br>\n\n<br>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/00006-attrdict浅析.md","raw":"---\ntitle: attrdict 模块浅析\ndate: 2020-03-04 00:27:09\ntags:\t\n  - Python\n  - attrdict\n  - 第三方库\n---\n\n\n\n![](02.jpg)\n\n\n\n<span style=\"margin-left: 32px;\">attrdict 模块，允许创建属性风格访问的字典类, python中访问嵌套字典的键值属性，语法冗长, 借助这个库，可以实现类似 JavaScript 访问嵌套对象属性的效果。</span>\n\n<span style=\"margin-left: 32px;\">data[\"Schedule\"][\"events\"][\"speakers\"][0][\"name\"] => data.Schedule.events[0].name</span>\n\n\n\n<!--more-->\n\n\n\n<br>\n\n#### 1. 概述\n\n##### 1.1 attrdict 模块\n\n<span style=\"margin-left: 32px;\">允许属性风格访问的字典类。</span>\n\n\n\n##### 1.2 我为什么喜欢这个库？\n\n<p style=\"margin-left: 20px;\">设想存在以下场景，我们有一个 json 文件，需要读入到内存中，供程序访问。</p>\n\nosconfeed.json\n\n```json\n{\"Schedule\": {\n    \n    \"conferences\": [{\"serial\": 115 }],\n    \"events\": [\n      {\n        \"serial\": 34756,\n        \"name\": \"Graph Theory You Need to Know\",\n        \"event_type\": \"40-minute conference session\",\n\n        \"time_start\": \"2014-07-22 14:30:00\",\n        \"time_stop\": \"2014-07-22 15:10:00\",\n        \"venue_serial\": 1452,\n        \"description\": \"A brief and friendly tour of the basics of graph theory, including a description and classification of the kinds of graphs and some interesting problems they can be employed to solve.\",\n        \"website_url\": \"http://oscon.com/oscon2014/public/schedule/detail/34756\",\n        \"speakers\": [137697],\n        \"categories\": [\n          \"Computational Thinking\"\n        ]\n      },\n      {\n        \"serial\": 34757,\n        \"name\": \"The Data Structures (You Think) You Need to Know\",\n        \"event_type\": \"40-minute conference session\",\n\n        \"time_start\": \"2014-07-23 13:40:00\",\n        \"time_stop\": \"2014-07-23 14:20:00\",\n        \"venue_serial\": 1448,\n        \"description\": \"A fun and approachable tour of some otherwise intimidating data structures. Learn how to solve difficult problems efficiently through the clever organization and linking of data.\",\n        \"website_url\": \"http://oscon.com/oscon2014/public/schedule/detail/34757\",\n        \"speakers\": [137697],\n        \"categories\": [\n          \"Computational Thinking\"\n        ]\n      }\n  ]\n}}\n```\n\n\n\n**我们可以如下访问编码：**\n\n```python\nimport json\n\n\ndef load_data(filepath):\n    with open(filepath, 'r') as fp:\n        return json.dumps(fp.read())\n\n\ndef do_something():\n    data = load_data('./osconfeed.json')\n    print(data[\"Schedule\"][\"events\"][\"serial\"])\t\t\t\t\t\t\n    print(data[\"Schedule\"][\"events\"][\"speakers\"][0][\"serial\"])\n    print(data[\"Schedule\"][\"events\"][\"speakers\"][0][\"name\"])\n    # do something...\n```\n\n<p><span style=\"margin-left: 32px;\">通过 json库，</span>我们可以很容易把 json 文件的内容，转换为 Python 的 dict 对象，进而通过 dict 来访问数据。不过 data[\"Schedule\"][\"events\"][\"speakers\"][0][\"name\"] 这种语法冗长。在 JavaScript 中，可以使用 data.Schedule.events[0].name  来查询这个值。 幸运的是，通过 attrdict 模块，就可以很容易的做到。</p>\n\n\n\n```python\nimport json\nfrom attrdict import AttrDict\n\ndef load_data(filepath):\n    with open(filepath, 'r') as fp:\n    \treturn AttrDict(json.dumps(fp.read()))\n\n    \ndef do_something():\n    data = load_data('./osconfeed.json')\n    print(data.Schedule.events.serial)\t\t\t\t\t\t\n    print(data.Schedule.events.speakers[0].serial)\n    print(data.Schedule.events.speakers[0].name)\n    # do something...\n```\n\n<br>\n\n\n\n#### 2. 原理浅析\n\nPython 访问对象的属性\n\n\n\n```\nPython中访问对象的属性，使用了 “.” 操作符。 \n\nobj.attr  \t=>\tgetattr(obj, attr)  \t\t=> \t__getattr__(self, obj, attr)\t\t\t\t\nobj.attr=val\t=> \tsetattr(obj, attr, val) \t=> \t__setattr__(self, obj, attr, val)\t\t\n```\n\n<span style=\"margin-left: 32px;\">故借助一个代理类，</span>重新实现上述两个方法，可以以访问属性的方式，来访问 dict 对象的键值属性。\n\n\n\n\n\n<br>\n\n#### 3. 源码浅析\n\n\n\n\n\n\n\n<br>\n\n#### 4. 拓展阅读\n\n**《流畅的Python》** 第19章 动态属性和特性，实现了 FrozenJSON 类，比大多数实现都简单。这个类能递归自动处理嵌套的映射和列表。\n\n\n\n<br>\n\n<br>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"00006-attrdict浅析","published":1,"updated":"2021-09-10T03:57:20.608Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cktdz4811000avgtxd6206y6r","content":"<p><img src=\"/2020/03/04/00006-attrdict%E6%B5%85%E6%9E%90/02.jpg\"></p>\n<p><span style=\"margin-left: 32px;\">attrdict 模块，允许创建属性风格访问的字典类, python中访问嵌套字典的键值属性，语法冗长, 借助这个库，可以实现类似 JavaScript 访问嵌套对象属性的效果。</span></p>\n<p><span style=\"margin-left: 32px;\">data[“Schedule”][“events”][“speakers”][0][“name”] =&gt; data.Schedule.events[0].name</span></p>\n<span id=\"more\"></span>\n\n\n\n<br>\n\n<h4 id=\"1-概述\"><a href=\"#1-概述\" class=\"headerlink\" title=\"1. 概述\"></a>1. 概述</h4><h5 id=\"1-1-attrdict-模块\"><a href=\"#1-1-attrdict-模块\" class=\"headerlink\" title=\"1.1 attrdict 模块\"></a>1.1 attrdict 模块</h5><p><span style=\"margin-left: 32px;\">允许属性风格访问的字典类。</span></p>\n<h5 id=\"1-2-我为什么喜欢这个库？\"><a href=\"#1-2-我为什么喜欢这个库？\" class=\"headerlink\" title=\"1.2 我为什么喜欢这个库？\"></a>1.2 我为什么喜欢这个库？</h5><p style=\"margin-left: 20px;\">设想存在以下场景，我们有一个 json 文件，需要读入到内存中，供程序访问。</p>\n\n<p>osconfeed.json</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"attr\">&quot;Schedule&quot;</span>: &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"attr\">&quot;conferences&quot;</span>: [&#123;<span class=\"attr\">&quot;serial&quot;</span>: <span class=\"number\">115</span> &#125;],</span><br><span class=\"line\">    <span class=\"attr\">&quot;events&quot;</span>: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;serial&quot;</span>: <span class=\"number\">34756</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;name&quot;</span>: <span class=\"string\">&quot;Graph Theory You Need to Know&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;event_type&quot;</span>: <span class=\"string\">&quot;40-minute conference session&quot;</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"attr\">&quot;time_start&quot;</span>: <span class=\"string\">&quot;2014-07-22 14:30:00&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;time_stop&quot;</span>: <span class=\"string\">&quot;2014-07-22 15:10:00&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;venue_serial&quot;</span>: <span class=\"number\">1452</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;description&quot;</span>: <span class=\"string\">&quot;A brief and friendly tour of the basics of graph theory, including a description and classification of the kinds of graphs and some interesting problems they can be employed to solve.&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;website_url&quot;</span>: <span class=\"string\">&quot;http://oscon.com/oscon2014/public/schedule/detail/34756&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;speakers&quot;</span>: [<span class=\"number\">137697</span>],</span><br><span class=\"line\">        <span class=\"attr\">&quot;categories&quot;</span>: [</span><br><span class=\"line\">          <span class=\"string\">&quot;Computational Thinking&quot;</span></span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;serial&quot;</span>: <span class=\"number\">34757</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;name&quot;</span>: <span class=\"string\">&quot;The Data Structures (You Think) You Need to Know&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;event_type&quot;</span>: <span class=\"string\">&quot;40-minute conference session&quot;</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"attr\">&quot;time_start&quot;</span>: <span class=\"string\">&quot;2014-07-23 13:40:00&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;time_stop&quot;</span>: <span class=\"string\">&quot;2014-07-23 14:20:00&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;venue_serial&quot;</span>: <span class=\"number\">1448</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;description&quot;</span>: <span class=\"string\">&quot;A fun and approachable tour of some otherwise intimidating data structures. Learn how to solve difficult problems efficiently through the clever organization and linking of data.&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;website_url&quot;</span>: <span class=\"string\">&quot;http://oscon.com/oscon2014/public/schedule/detail/34757&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;speakers&quot;</span>: [<span class=\"number\">137697</span>],</span><br><span class=\"line\">        <span class=\"attr\">&quot;categories&quot;</span>: [</span><br><span class=\"line\">          <span class=\"string\">&quot;Computational Thinking&quot;</span></span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><strong>我们可以如下访问编码：</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">load_data</span>(<span class=\"params\">filepath</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(filepath, <span class=\"string\">&#x27;r&#x27;</span>) <span class=\"keyword\">as</span> fp:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json.dumps(fp.read())</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">do_something</span>():</span></span><br><span class=\"line\">    data = load_data(<span class=\"string\">&#x27;./osconfeed.json&#x27;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(data[<span class=\"string\">&quot;Schedule&quot;</span>][<span class=\"string\">&quot;events&quot;</span>][<span class=\"string\">&quot;serial&quot;</span>])\t\t\t\t\t\t</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(data[<span class=\"string\">&quot;Schedule&quot;</span>][<span class=\"string\">&quot;events&quot;</span>][<span class=\"string\">&quot;speakers&quot;</span>][<span class=\"number\">0</span>][<span class=\"string\">&quot;serial&quot;</span>])</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(data[<span class=\"string\">&quot;Schedule&quot;</span>][<span class=\"string\">&quot;events&quot;</span>][<span class=\"string\">&quot;speakers&quot;</span>][<span class=\"number\">0</span>][<span class=\"string\">&quot;name&quot;</span>])</span><br><span class=\"line\">    <span class=\"comment\"># do something...</span></span><br></pre></td></tr></table></figure>\n\n<p><span style=\"margin-left: 32px;\">通过 json库，</span>我们可以很容易把 json 文件的内容，转换为 Python 的 dict 对象，进而通过 dict 来访问数据。不过 data[\"Schedule\"][\"events\"][\"speakers\"][0][\"name\"] 这种语法冗长。在 JavaScript 中，可以使用 data.Schedule.events[0].name  来查询这个值。 幸运的是，通过 attrdict 模块，就可以很容易的做到。</p>\n\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"><span class=\"keyword\">from</span> attrdict <span class=\"keyword\">import</span> AttrDict</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">load_data</span>(<span class=\"params\">filepath</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(filepath, <span class=\"string\">&#x27;r&#x27;</span>) <span class=\"keyword\">as</span> fp:</span><br><span class=\"line\">    \t<span class=\"keyword\">return</span> AttrDict(json.dumps(fp.read()))</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">do_something</span>():</span></span><br><span class=\"line\">    data = load_data(<span class=\"string\">&#x27;./osconfeed.json&#x27;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(data.Schedule.events.serial)\t\t\t\t\t\t</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(data.Schedule.events.speakers[<span class=\"number\">0</span>].serial)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(data.Schedule.events.speakers[<span class=\"number\">0</span>].name)</span><br><span class=\"line\">    <span class=\"comment\"># do something...</span></span><br></pre></td></tr></table></figure>\n\n<br>\n\n\n\n<h4 id=\"2-原理浅析\"><a href=\"#2-原理浅析\" class=\"headerlink\" title=\"2. 原理浅析\"></a>2. 原理浅析</h4><p>Python 访问对象的属性</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Python中访问对象的属性，使用了 “.” 操作符。 </span><br><span class=\"line\"></span><br><span class=\"line\">obj.attr  \t=&gt;\tgetattr(obj, attr)  \t\t=&gt; \t__getattr__(self, obj, attr)\t\t\t\t</span><br><span class=\"line\">obj.attr=val\t=&gt; \tsetattr(obj, attr, val) \t=&gt; \t__setattr__(self, obj, attr, val)\t\t</span><br></pre></td></tr></table></figure>\n\n<p><span style=\"margin-left: 32px;\">故借助一个代理类，</span>重新实现上述两个方法，可以以访问属性的方式，来访问 dict 对象的键值属性。</p>\n<br>\n\n<h4 id=\"3-源码浅析\"><a href=\"#3-源码浅析\" class=\"headerlink\" title=\"3. 源码浅析\"></a>3. 源码浅析</h4><br>\n\n<h4 id=\"4-拓展阅读\"><a href=\"#4-拓展阅读\" class=\"headerlink\" title=\"4. 拓展阅读\"></a>4. 拓展阅读</h4><p><strong>《流畅的Python》</strong> 第19章 动态属性和特性，实现了 FrozenJSON 类，比大多数实现都简单。这个类能递归自动处理嵌套的映射和列表。</p>\n<br>\n\n<br>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","site":{"data":{}},"excerpt":"<p><img src=\"/2020/03/04/00006-attrdict%E6%B5%85%E6%9E%90/02.jpg\"></p>\n<p><span style=\"margin-left: 32px;\">attrdict 模块，允许创建属性风格访问的字典类, python中访问嵌套字典的键值属性，语法冗长, 借助这个库，可以实现类似 JavaScript 访问嵌套对象属性的效果。</span></p>\n<p><span style=\"margin-left: 32px;\">data[“Schedule”][“events”][“speakers”][0][“name”] =&gt; data.Schedule.events[0].name</span></p>","more":"<br>\n\n<h4 id=\"1-概述\"><a href=\"#1-概述\" class=\"headerlink\" title=\"1. 概述\"></a>1. 概述</h4><h5 id=\"1-1-attrdict-模块\"><a href=\"#1-1-attrdict-模块\" class=\"headerlink\" title=\"1.1 attrdict 模块\"></a>1.1 attrdict 模块</h5><p><span style=\"margin-left: 32px;\">允许属性风格访问的字典类。</span></p>\n<h5 id=\"1-2-我为什么喜欢这个库？\"><a href=\"#1-2-我为什么喜欢这个库？\" class=\"headerlink\" title=\"1.2 我为什么喜欢这个库？\"></a>1.2 我为什么喜欢这个库？</h5><p style=\"margin-left: 20px;\">设想存在以下场景，我们有一个 json 文件，需要读入到内存中，供程序访问。</p>\n\n<p>osconfeed.json</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"attr\">&quot;Schedule&quot;</span>: &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"attr\">&quot;conferences&quot;</span>: [&#123;<span class=\"attr\">&quot;serial&quot;</span>: <span class=\"number\">115</span> &#125;],</span><br><span class=\"line\">    <span class=\"attr\">&quot;events&quot;</span>: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;serial&quot;</span>: <span class=\"number\">34756</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;name&quot;</span>: <span class=\"string\">&quot;Graph Theory You Need to Know&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;event_type&quot;</span>: <span class=\"string\">&quot;40-minute conference session&quot;</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"attr\">&quot;time_start&quot;</span>: <span class=\"string\">&quot;2014-07-22 14:30:00&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;time_stop&quot;</span>: <span class=\"string\">&quot;2014-07-22 15:10:00&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;venue_serial&quot;</span>: <span class=\"number\">1452</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;description&quot;</span>: <span class=\"string\">&quot;A brief and friendly tour of the basics of graph theory, including a description and classification of the kinds of graphs and some interesting problems they can be employed to solve.&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;website_url&quot;</span>: <span class=\"string\">&quot;http://oscon.com/oscon2014/public/schedule/detail/34756&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;speakers&quot;</span>: [<span class=\"number\">137697</span>],</span><br><span class=\"line\">        <span class=\"attr\">&quot;categories&quot;</span>: [</span><br><span class=\"line\">          <span class=\"string\">&quot;Computational Thinking&quot;</span></span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;serial&quot;</span>: <span class=\"number\">34757</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;name&quot;</span>: <span class=\"string\">&quot;The Data Structures (You Think) You Need to Know&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;event_type&quot;</span>: <span class=\"string\">&quot;40-minute conference session&quot;</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"attr\">&quot;time_start&quot;</span>: <span class=\"string\">&quot;2014-07-23 13:40:00&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;time_stop&quot;</span>: <span class=\"string\">&quot;2014-07-23 14:20:00&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;venue_serial&quot;</span>: <span class=\"number\">1448</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;description&quot;</span>: <span class=\"string\">&quot;A fun and approachable tour of some otherwise intimidating data structures. Learn how to solve difficult problems efficiently through the clever organization and linking of data.&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;website_url&quot;</span>: <span class=\"string\">&quot;http://oscon.com/oscon2014/public/schedule/detail/34757&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;speakers&quot;</span>: [<span class=\"number\">137697</span>],</span><br><span class=\"line\">        <span class=\"attr\">&quot;categories&quot;</span>: [</span><br><span class=\"line\">          <span class=\"string\">&quot;Computational Thinking&quot;</span></span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><strong>我们可以如下访问编码：</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">load_data</span>(<span class=\"params\">filepath</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(filepath, <span class=\"string\">&#x27;r&#x27;</span>) <span class=\"keyword\">as</span> fp:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json.dumps(fp.read())</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">do_something</span>():</span></span><br><span class=\"line\">    data = load_data(<span class=\"string\">&#x27;./osconfeed.json&#x27;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(data[<span class=\"string\">&quot;Schedule&quot;</span>][<span class=\"string\">&quot;events&quot;</span>][<span class=\"string\">&quot;serial&quot;</span>])\t\t\t\t\t\t</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(data[<span class=\"string\">&quot;Schedule&quot;</span>][<span class=\"string\">&quot;events&quot;</span>][<span class=\"string\">&quot;speakers&quot;</span>][<span class=\"number\">0</span>][<span class=\"string\">&quot;serial&quot;</span>])</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(data[<span class=\"string\">&quot;Schedule&quot;</span>][<span class=\"string\">&quot;events&quot;</span>][<span class=\"string\">&quot;speakers&quot;</span>][<span class=\"number\">0</span>][<span class=\"string\">&quot;name&quot;</span>])</span><br><span class=\"line\">    <span class=\"comment\"># do something...</span></span><br></pre></td></tr></table></figure>\n\n<p><span style=\"margin-left: 32px;\">通过 json库，</span>我们可以很容易把 json 文件的内容，转换为 Python 的 dict 对象，进而通过 dict 来访问数据。不过 data[\"Schedule\"][\"events\"][\"speakers\"][0][\"name\"] 这种语法冗长。在 JavaScript 中，可以使用 data.Schedule.events[0].name  来查询这个值。 幸运的是，通过 attrdict 模块，就可以很容易的做到。</p>\n\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"><span class=\"keyword\">from</span> attrdict <span class=\"keyword\">import</span> AttrDict</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">load_data</span>(<span class=\"params\">filepath</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(filepath, <span class=\"string\">&#x27;r&#x27;</span>) <span class=\"keyword\">as</span> fp:</span><br><span class=\"line\">    \t<span class=\"keyword\">return</span> AttrDict(json.dumps(fp.read()))</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">do_something</span>():</span></span><br><span class=\"line\">    data = load_data(<span class=\"string\">&#x27;./osconfeed.json&#x27;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(data.Schedule.events.serial)\t\t\t\t\t\t</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(data.Schedule.events.speakers[<span class=\"number\">0</span>].serial)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(data.Schedule.events.speakers[<span class=\"number\">0</span>].name)</span><br><span class=\"line\">    <span class=\"comment\"># do something...</span></span><br></pre></td></tr></table></figure>\n\n<br>\n\n\n\n<h4 id=\"2-原理浅析\"><a href=\"#2-原理浅析\" class=\"headerlink\" title=\"2. 原理浅析\"></a>2. 原理浅析</h4><p>Python 访问对象的属性</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Python中访问对象的属性，使用了 “.” 操作符。 </span><br><span class=\"line\"></span><br><span class=\"line\">obj.attr  \t=&gt;\tgetattr(obj, attr)  \t\t=&gt; \t__getattr__(self, obj, attr)\t\t\t\t</span><br><span class=\"line\">obj.attr=val\t=&gt; \tsetattr(obj, attr, val) \t=&gt; \t__setattr__(self, obj, attr, val)\t\t</span><br></pre></td></tr></table></figure>\n\n<p><span style=\"margin-left: 32px;\">故借助一个代理类，</span>重新实现上述两个方法，可以以访问属性的方式，来访问 dict 对象的键值属性。</p>\n<br>\n\n<h4 id=\"3-源码浅析\"><a href=\"#3-源码浅析\" class=\"headerlink\" title=\"3. 源码浅析\"></a>3. 源码浅析</h4><br>\n\n<h4 id=\"4-拓展阅读\"><a href=\"#4-拓展阅读\" class=\"headerlink\" title=\"4. 拓展阅读\"></a>4. 拓展阅读</h4><p><strong>《流畅的Python》</strong> 第19章 动态属性和特性，实现了 FrozenJSON 类，比大多数实现都简单。这个类能递归自动处理嵌套的映射和列表。</p>\n<br>\n\n<br>"},{"title":"源码阅读方法","date":"2021-09-10T02:00:44.000Z","_content":"\n\n\n![](01.jpg)\n\n<p><span style=\"margin-left: 32px;\">收藏看过喜欢的博客，日后自己琢磨出一套学习源码的方法，再补充自己的方法。:></span>)  </p>\n\n\n\n<!--more-->\n\n\n\n\n\n\n\n\n\n[参考资料]\n\n1. [为什么要读源码](https://zhuanlan.zhihu.com/p/55835408)\n2. [源码剖析约定的规范和方法](https://zhuanlan.zhihu.com/p/98143228)\n3. [如何快速的理清看懂一份源代码](https://zhuanlan.zhihu.com/p/50997478)\n4. [认知的几点规律](http://qiankunli.github.io/2018/11/05/cognition.html)\n5. [学习方式分享-怎样去阅读源代码](https://zhuanlan.zhihu.com/p/79734476)\n6. [Servlet 底层源码分析](https://zhuanlan.zhihu.com/p/75722839)\n7. [看开源代码利器-用Graphviz + CodeViz 生成C/C++函数调用图(call graph)](https://www.cnblogs.com/lanxuezaipiao/p/3450201.html)\n\n\n\n\n\n\n\n","source":"_posts/00007-源码阅读方法.md","raw":"---\ntitle: 源码阅读方法\ndate: 2021-09-10 10:00:44\ntags:\n  - 源码阅读\n---\n\n\n\n![](01.jpg)\n\n<p><span style=\"margin-left: 32px;\">收藏看过喜欢的博客，日后自己琢磨出一套学习源码的方法，再补充自己的方法。:></span>)  </p>\n\n\n\n<!--more-->\n\n\n\n\n\n\n\n\n\n[参考资料]\n\n1. [为什么要读源码](https://zhuanlan.zhihu.com/p/55835408)\n2. [源码剖析约定的规范和方法](https://zhuanlan.zhihu.com/p/98143228)\n3. [如何快速的理清看懂一份源代码](https://zhuanlan.zhihu.com/p/50997478)\n4. [认知的几点规律](http://qiankunli.github.io/2018/11/05/cognition.html)\n5. [学习方式分享-怎样去阅读源代码](https://zhuanlan.zhihu.com/p/79734476)\n6. [Servlet 底层源码分析](https://zhuanlan.zhihu.com/p/75722839)\n7. [看开源代码利器-用Graphviz + CodeViz 生成C/C++函数调用图(call graph)](https://www.cnblogs.com/lanxuezaipiao/p/3450201.html)\n\n\n\n\n\n\n\n","slug":"00007-源码阅读方法","published":1,"updated":"2021-09-10T03:30:15.806Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cktdz4812000bvgtx8tly299a","content":"<p><img src=\"/2021/09/10/00007-%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%E6%96%B9%E6%B3%95/01.jpg\"></p>\n<p><span style=\"margin-left: 32px;\">收藏看过喜欢的博客，日后自己琢磨出一套学习源码的方法，再补充自己的方法。:></span>)  </p>\n\n\n\n<span id=\"more\"></span>\n\n\n\n\n\n\n\n\n\n<p>[参考资料]</p>\n<ol>\n<li><a href=\"https://zhuanlan.zhihu.com/p/55835408\">为什么要读源码</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/98143228\">源码剖析约定的规范和方法</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/50997478\">如何快速的理清看懂一份源代码</a></li>\n<li><a href=\"http://qiankunli.github.io/2018/11/05/cognition.html\">认知的几点规律</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/79734476\">学习方式分享-怎样去阅读源代码</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/75722839\">Servlet 底层源码分析</a></li>\n<li><a href=\"https://www.cnblogs.com/lanxuezaipiao/p/3450201.html\">看开源代码利器-用Graphviz + CodeViz 生成C/C++函数调用图(call graph)</a></li>\n</ol>\n","site":{"data":{}},"excerpt":"<p><img src=\"/2021/09/10/00007-%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%E6%96%B9%E6%B3%95/01.jpg\"></p>\n<p><span style=\"margin-left: 32px;\">收藏看过喜欢的博客，日后自己琢磨出一套学习源码的方法，再补充自己的方法。:></span>)  </p>","more":"<p>[参考资料]</p>\n<ol>\n<li><a href=\"https://zhuanlan.zhihu.com/p/55835408\">为什么要读源码</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/98143228\">源码剖析约定的规范和方法</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/50997478\">如何快速的理清看懂一份源代码</a></li>\n<li><a href=\"http://qiankunli.github.io/2018/11/05/cognition.html\">认知的几点规律</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/79734476\">学习方式分享-怎样去阅读源代码</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/75722839\">Servlet 底层源码分析</a></li>\n<li><a href=\"https://www.cnblogs.com/lanxuezaipiao/p/3450201.html\">看开源代码利器-用Graphviz + CodeViz 生成C/C++函数调用图(call graph)</a></li>\n</ol>"}],"PostAsset":[{"_id":"source/_posts/00005-mysql主从配置实践/01.png","post":"cktdz48100009vgtxca939rqc","slug":"01.png","modified":1,"renderable":1},{"_id":"source/_posts/00005-mysql主从配置实践/02.png","post":"cktdz48100009vgtxca939rqc","slug":"02.png","modified":1,"renderable":1},{"_id":"source/_posts/00005-mysql主从配置实践/03.jfif","post":"cktdz48100009vgtxca939rqc","slug":"03.jfif","modified":1,"renderable":1},{"_id":"source/_posts/00005-mysql主从配置实践/03.jpg","post":"cktdz48100009vgtxca939rqc","slug":"03.jpg","modified":1,"renderable":1},{"_id":"source/_posts/00005-mysql主从配置实践/05.png","post":"cktdz48100009vgtxca939rqc","slug":"05.png","modified":1,"renderable":1},{"_id":"source/_posts/00005-mysql主从配置实践/06.png","post":"cktdz48100009vgtxca939rqc","slug":"06.png","modified":1,"renderable":1},{"_id":"source/_posts/00005-mysql主从配置实践/07.png","post":"cktdz48100009vgtxca939rqc","slug":"07.png","modified":1,"renderable":1},{"_id":"source/_posts/00005-mysql主从配置实践/08.png","post":"cktdz48100009vgtxca939rqc","slug":"08.png","modified":1,"renderable":1},{"_id":"source/_posts/00005-mysql主从配置实践/09.png","post":"cktdz48100009vgtxca939rqc","slug":"09.png","modified":1,"renderable":1},{"_id":"source/_posts/00005-mysql主从配置实践/10.png","post":"cktdz48100009vgtxca939rqc","slug":"10.png","modified":1,"renderable":1},{"_id":"source/_posts/00006-attrdict浅析/01.jpg","post":"cktdz4811000avgtxd6206y6r","slug":"01.jpg","modified":1,"renderable":1},{"_id":"source/_posts/00006-attrdict浅析/02.jpg","post":"cktdz4811000avgtxd6206y6r","slug":"02.jpg","modified":1,"renderable":1},{"_id":"source/_posts/00007-源码阅读方法/01.jpg","post":"cktdz4812000bvgtx8tly299a","slug":"01.jpg","modified":1,"renderable":1}],"PostCategory":[{"post_id":"cktdz480w0005vgtx9gppgncn","category_id":"cktdz480z0007vgtxcul81gum","_id":"cktdz4814000gvgtx5bqtdszp"},{"post_id":"cktdz480w0005vgtx9gppgncn","category_id":"cktdz4813000dvgtxh7g20ycf","_id":"cktdz4815000hvgtx9v353syq"}],"PostTag":[{"post_id":"cktdz480w0005vgtx9gppgncn","tag_id":"cktdz48100008vgtx6cxnfr5q","_id":"cktdz481c000qvgtxguuj372y"},{"post_id":"cktdz480w0005vgtx9gppgncn","tag_id":"cktdz4813000cvgtx97860beb","_id":"cktdz481c000rvgtx1b6890kw"},{"post_id":"cktdz480w0005vgtx9gppgncn","tag_id":"cktdz4814000evgtx7e8yh4y9","_id":"cktdz481e000tvgtx0zughn0o"},{"post_id":"cktdz480w0005vgtx9gppgncn","tag_id":"cktdz4814000fvgtx0tyw8b50","_id":"cktdz481e000uvgtxb6rw4m8j"},{"post_id":"cktdz480w0005vgtx9gppgncn","tag_id":"cktdz4815000ivgtx9uy24j2e","_id":"cktdz481f000wvgtxey8g4moh"},{"post_id":"cktdz480w0005vgtx9gppgncn","tag_id":"cktdz4816000jvgtx5n0qf6w4","_id":"cktdz481g000xvgtxbhkx4wtt"},{"post_id":"cktdz480w0005vgtx9gppgncn","tag_id":"cktdz4817000kvgtx42oo3f28","_id":"cktdz481g000zvgtxhgn936kk"},{"post_id":"cktdz480w0005vgtx9gppgncn","tag_id":"cktdz4817000lvgtx5zpv40vs","_id":"cktdz481g0010vgtxh6lldp0c"},{"post_id":"cktdz480w0005vgtx9gppgncn","tag_id":"cktdz4818000mvgtx8koz579v","_id":"cktdz481g0012vgtxa6yx7u2z"},{"post_id":"cktdz480w0005vgtx9gppgncn","tag_id":"cktdz4818000nvgtxg0a0bjp5","_id":"cktdz481g0013vgtx470z7b94"},{"post_id":"cktdz480w0005vgtx9gppgncn","tag_id":"cktdz4819000ovgtx56hpft7o","_id":"cktdz481h0015vgtx6lox1jnv"},{"post_id":"cktdz480y0006vgtxdacsb0sv","tag_id":"cktdz4815000ivgtx9uy24j2e","_id":"cktdz481h0016vgtxb4xr1af5"},{"post_id":"cktdz480y0006vgtxdacsb0sv","tag_id":"cktdz481c000svgtxb60degzy","_id":"cktdz481h0017vgtx7a2u9i3c"},{"post_id":"cktdz48100009vgtxca939rqc","tag_id":"cktdz481e000vvgtx6fpjfo3p","_id":"cktdz481h0019vgtxhjxq46lh"},{"post_id":"cktdz48100009vgtxca939rqc","tag_id":"cktdz481g000yvgtx31zp4jf0","_id":"cktdz481h001avgtx1b6a5k80"},{"post_id":"cktdz4811000avgtxd6206y6r","tag_id":"cktdz481c000svgtxb60degzy","_id":"cktdz481i001cvgtx9sn87ste"},{"post_id":"cktdz4811000avgtxd6206y6r","tag_id":"cktdz481g0014vgtx9dzx6zvx","_id":"cktdz481i001dvgtxc8c715ks"},{"post_id":"cktdz4811000avgtxd6206y6r","tag_id":"cktdz481h0018vgtx4fci2tww","_id":"cktdz481i001evgtxcoux9b2e"},{"post_id":"cktdz4812000bvgtx8tly299a","tag_id":"cktdz481i001bvgtxgvwp6gq3","_id":"cktdz481i001fvgtxd8ya8g92"}],"Tag":[{"name":"计算机","_id":"cktdz48100008vgtx6cxnfr5q"},{"name":"知识体系结构","_id":"cktdz4813000cvgtx97860beb"},{"name":"编程语言","_id":"cktdz4814000evgtx7e8yh4y9"},{"name":"数据结构与算法","_id":"cktdz4814000fvgtx0tyw8b50"},{"name":"设计模式","_id":"cktdz4815000ivgtx9uy24j2e"},{"name":"操作系统","_id":"cktdz4816000jvgtx5n0qf6w4"},{"name":"计算机网络","_id":"cktdz4817000kvgtx42oo3f28"},{"name":"编译原理","_id":"cktdz4817000lvgtx5zpv40vs"},{"name":"计算机组成原理","_id":"cktdz4818000mvgtx8koz579v"},{"name":"数据库","_id":"cktdz4818000nvgtxg0a0bjp5"},{"name":"容器技术","_id":"cktdz4819000ovgtx56hpft7o"},{"name":"Python","_id":"cktdz481c000svgtxb60degzy"},{"name":"docker","_id":"cktdz481e000vvgtx6fpjfo3p"},{"name":"mysql","_id":"cktdz481g000yvgtx31zp4jf0"},{"name":"attrdict","_id":"cktdz481g0014vgtx9dzx6zvx"},{"name":"第三方库","_id":"cktdz481h0018vgtx4fci2tww"},{"name":"源码阅读","_id":"cktdz481i001bvgtxgvwp6gq3"}]}}